[{"/home/deepak/Videos/quiz-app/src/index.js":"1","/home/deepak/Videos/quiz-app/src/reportWebVitals.js":"2","/home/deepak/Videos/quiz-app/src/serviceWorkerRegistration.js":"3","/home/deepak/Videos/quiz-app/src/App.jsx":"4","/home/deepak/Videos/quiz-app/src/Redux/store.jsx":"5","/home/deepak/Videos/quiz-app/src/Pages/Final.jsx":"6","/home/deepak/Videos/quiz-app/src/Pages/Question.jsx":"7","/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx":"8","/home/deepak/Videos/quiz-app/src/Redux/reducer.jsx":"9","/home/deepak/Videos/quiz-app/src/Components/404/Error.jsx":"10","/home/deepak/Videos/quiz-app/src/Components/TextField.jsx":"11","/home/deepak/Videos/quiz-app/src/Components/SelectField.jsx":"12","/home/deepak/Videos/quiz-app/src/hooks/Axios.jsx":"13","/home/deepak/Videos/quiz-app/src/Redux/action.jsx":"14","/home/deepak/Videos/quiz-app/src/Redux/actionTypes.jsx":"15","/home/deepak/Videos/quiz-app/src/Pages/Admin.jsx":"16","/home/deepak/Videos/quiz-app/src/Pages/viewQuestions.jsx":"17","/home/deepak/Videos/quiz-app/src/service-worker.js":"18"},{"size":736,"mtime":1690082774260,"results":"19","hashOfConfig":"20"},{"size":364,"mtime":1690082774260,"results":"21","hashOfConfig":"20"},{"size":5092,"mtime":1690082774260,"results":"22","hashOfConfig":"20"},{"size":1603,"mtime":1690181655983,"results":"23","hashOfConfig":"20"},{"size":109,"mtime":1690082774260,"results":"24","hashOfConfig":"20"},{"size":2269,"mtime":1690198623250,"results":"25","hashOfConfig":"20"},{"size":6892,"mtime":1690198710465,"results":"26","hashOfConfig":"20"},{"size":4054,"mtime":1690197870342,"results":"27","hashOfConfig":"20"},{"size":1292,"mtime":1690197459102,"results":"28","hashOfConfig":"20"},{"size":140,"mtime":1690082774260,"results":"29","hashOfConfig":"20"},{"size":834,"mtime":1690187782108,"results":"30","hashOfConfig":"20"},{"size":1618,"mtime":1690188213257,"results":"31","hashOfConfig":"20"},{"size":1131,"mtime":1690177247405,"results":"32","hashOfConfig":"20"},{"size":770,"mtime":1690109934788,"results":"33","hashOfConfig":"20"},{"size":324,"mtime":1690109907454,"results":"34","hashOfConfig":"20"},{"size":3719,"mtime":1690199413309,"results":"35","hashOfConfig":"20"},{"size":4968,"mtime":1690198224319,"results":"36","hashOfConfig":"20"},{"size":2837,"mtime":1690082774260,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"q4jg93",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/home/deepak/Videos/quiz-app/src/index.js",[],[],["101","102"],"/home/deepak/Videos/quiz-app/src/reportWebVitals.js",[],[],"/home/deepak/Videos/quiz-app/src/serviceWorkerRegistration.js",[],[],"/home/deepak/Videos/quiz-app/src/App.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Redux/store.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],[],"import { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n\n  const { question_difficulty, name, question_limit, question_answers, question_category, score, user_answers, } = useSelector((state) => state);\n  // let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n  useEffect(() => {\n   \n\n\n  if(urlParams.get(\"limit\").length == 0){\n    history.push(\"/\")\n  }\n  }, [])\n\n \n\n\n  return (\n    <Box display={\"lex\"} justifyContent={\"center\"} alignItems={\"center\"} height={\"100vh\"}>\n      <Container maxWidth={\"sm\"} sx={{ boxShadow: 5 }}>\n      \n        <Card sx={{ minWidth: \"100%\",minHeight:\"50vh\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",flexDirection:\"column\",borderRadius:\"24px\" }}>\n          <CardContent>\n            <Typography variant=\"h4\" className=\"result\" fontWeight=\"bold\" mb={2}>\n             QUIZ RESULT\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Final Score : {urlParams.get(\"scoreValue\")}/{urlParams.get(\"limit\")}\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Your Percentage : {urlParams.get(\"pecentageValue\") + \"%\"}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ justifyContent: \"center\" }}>\n            <Button variant=\"contained\" onClick={()=>history.push(\"/\")} >\n              back to settings!\n            </Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Final;\n",["118","119"],"/home/deepak/Videos/quiz-app/src/Pages/Question.jsx",["120","121","122","123","124","125","126","127","128","129"],[],"\nimport React from \"react\";\nimport { Button, CircularProgress, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { decode } from \"html-entities\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\n\nimport { handleScoreChnage,userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    user_answers,\n    question_type,\n    question_limit,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector((state) => state);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n  \n\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false)\n  const [intialRender, setInitialRender] = useState(true)\n\n  const handleListItemClick = (\n    number\n  ) => {\n    setSelectedIndex(number);\n  };\n  useEffect(() => {\n    \n    if (question_answers?.length) {\n      const question = question_answers[questionIndex];\n    \n      let answers = []\n      for (const [key, value] of Object.entries(question.answers)) {\n      \n\n        if (value)\n          answers.push({\n            [key]: value\n          })\n      }\n      answers.splice(\n        getRandomInt(question.answers.length),\n        0,\n        // question.correct_answer\n      );\n      setOptions(answers);\n    }else{\n      history.push(\"/\")\n    }\n  }, [question_answers, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (dataName, next) => {\n  \n    const question = question_answers[questionIndex];\n    if(next ){\n  \n      dispatch(userAnswers({\n        questionId:question.id,\n        selectedAnswer:dataName}))\n    }\n    if (next && questionIndex + 1 < question_answers.length) {\n    \n     \n      if (dataName == question.correct_answer) {\n        dispatch(handleScoreChnage(score + 1));\n      }else{\n     \n        if(question.correct_answers[dataName+\"_correct\"] === \"true\"){\n         \n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n\n  \n      // dispatch(userAnswers({\n      //   questionId:question.id,\n      //   selectedAnswer:dataName}))\n      setInitialRender(true)\n      setQuestionIndex(questionIndex + 1);\n      setSelectedIndex(0)\n    } else {\n     \n      if (dataName == question.correct_answer) {\n\n        dispatch(handleScoreChnage(score + 1));\n      }else{\n      \n        if(question.correct_answers[dataName+\"_correct\"] === \"true\"){\n        \n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n  \n        \n      let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n      if(name){\n        const userResult = {\n          name: name,\n          question_difficulty: question_difficulty,\n          question_limit: question_limit,\n          question_category,\n          score: score,\n          user_answers: user_answers,\n          percentageValue: percentageValue,\n          question_answers: question_answers\n        }\n    \n        let getUserDetails = localStorage.getItem(\"userDetails\")\n    \n        if (!getUserDetails) {\n          var userArray = []\n          localStorage.setItem(\"userDetails\", JSON.stringify(userArray))\n        } else {\n         \n          if (localStorage.getItem(\"userDetails\")) {\n            localStorage.setItem(\"userDetails\", JSON.stringify([...JSON.parse(localStorage.getItem(\"userDetails\")), userResult]))\n          }\n        }\n       \n      }\n      console.log(localStorage.getItem(\"userDetails\"),\"getUser\")\n\n      window.location.href = `/score?scoreValue=${score}&pecentageValue=${percentageValue}&limit=${question_answers.length}`\n      //  history.push(\"/score\");\n    }\n  };\n\n  return (\n    <>\n<Container maxWidth={\"xl\"} >\n      <Box mt={2} mb={2} display={\"flex\"} justifyContent={\"space-between\"}>\n        <Typography variant=\"h5\">Welcome {name}</Typography>\n        <Typography variant=\"h4\">{question_category}</Typography>\n        <Typography variant=\"h6\">Questions {questionIndex + 1 + \"/\" + question_answers.length}</Typography>\n      </Box>\n      </Container>\n      <Container sx={{ display:\"flex\",alignItems:\"center\",justifyContent:\"center\",}}  >\n      <Card  className=\"question-card\"  sx={{ minHeight:\"80vh\",width:\"74%\"}}>\n        <CardContent className=\"card-question\" >\n          <Typography variant=\"h3\" className=\"qust\" mt={5} >\n            {/* {decode(response.results[questionIndex].question)} */}\n            {question_answers[questionIndex].question}\n          </Typography>\n          {options.map((data, id) => (\n            <Box mt={2} key={id}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\" className=\"ans-list\">\n                <ListItemButton sx={{boxShadow:\"2\"}} name={Object.keys(data)}\n                  selected={!intialRender ? id === selectedIndex : false}\n                  onClick={() => {\n                    setInitialRender(false);\n                    handleListItemClick(id);\n                  }}\n                >\n                  <ListItemText primary={Object.values(data)} />\n                </ListItemButton>\n              </List>\n              {/* <Button name={Object.keys(data)} onClick={handleClickAnswer} variant=\"contained\">\n            {Object.values(data)}\n          </Button> */}\n            </Box>\n          ))}\n          {/* <Box mt={5}>\n            Score: {score} / {question_answers.length}\n          </Box> */}\n         \n        </CardContent>\n\n        <CardActions sx={{padding:\"30px\"}} >\n            <Box display={\"flex\"} width={\"100%\"} justifyContent={\"flex-end\"}>\n              {/* <Button variant=\"contained\" size=\"medium\">PREV</Button> */}\n              <Button disabled={intialRender} onClick={(e) => { handleClickAnswer(...Object.keys(options[selectedIndex]), true) }} variant=\"contained\" size=\"medium\">\n                {questionIndex + 1 === question_answers.length ? \"SUBMIT\" : \"NEXT\"}\n              </Button>\n            </Box>\n          </CardActions>\n      </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n","/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx",["130","131","132"],[],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, CircularProgress, Grid, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport useFetchData, { getQuestions } from \"../hooks/Axios\";\nimport { handleCategoryChange, handleDifficultyChange, handleLimitChange, handleNameChange, handleScoreChnage, questionAnswers } from \"../Redux/action\";\n\nconst categoryOptions = [\n  { id: \"Random\", name: \"Random\" },\n  { id: \"Linux\", name: \"Linux\" },\n  { id: \"DevOps\", name: \"DevOps\" },\n  { id: \"Networking\", name: \"Networking\" },\n  { id: \"Cloud\", name: \"Cloud\" },\n  { id: \"Docker\", name: \"Docker\" },\n]\n\nconst difficultyOption = [\n  { id: \"easy\", name: \"Easy\" },\n  { id: \"medium\", name: \"Medium\" },\n  { id: \"hard\", name: \"Hard\" },\n];\n\nconst typeOptions = [\n  { id: \"5\", name: \"5\" },\n  { id: \"10\", name: \"10\" },\n  { id: \"15\", name: \"15\" },\n  { id: \"20\", name: \"20\" },\n];\n\nconst errObject = {\n  401: \"Unauthenticated\",\n  404: \"No questions found\",\n  429: \"Too Many Requests\"\n}\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst Setting = () => {\n  const { response, loading, error } = useFetchData({ url: \"/api_category.php\" });\n  const history = useHistory();\n  const { question_category, question_difficulty, question_limit, name } = useSelector((state) => state);\n  const [open, setOpen] = React.useState(false);\n  const[result,setResult] = useState()\n  useEffect(() => {\n    clearState()\n  }, [])\n\n  const dispatch = useDispatch()\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  function clearState() {\n    dispatch(handleScoreChnage(0));\n    dispatch(handleCategoryChange(\"\"));\n    dispatch(handleDifficultyChange(\"\"))\n    dispatch(handleLimitChange(\"\"))\n    dispatch(handleNameChange(\"\"))\n  }\n\n\n\n  if (error) {\n    return (\n\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong!!\n      </Typography>\n    );\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"name : \", name);\n    const url = `https://quizapi.io/api/v1/questions?${question_category ? \"category=\" + question_category : \"\"}${question_difficulty ? \"&difficulty=\" + question_difficulty : \"\"}${question_limit ? \"&limit=\" + question_limit : \"\"}`\n    console.log(\"event : \", url);\n\n    const result = await getQuestions(url)\n    if (!errObject[result]) {\n      dispatch(questionAnswers(result))\n      history.push(\"/question\");\n    }else{\n      setResult(errObject[result])\n      setOpen(true)\n    }\n    console.log(\"result\", result)\n    // history.push(\"/question\");\n  };\n\n\n  return (\n<Grid sx={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",maxWidth:\"100%\",flexDirection:\"column\",minHeight:\"100vh\"}}>\n<Typography variant=\"h2\" fontWeight=\"bold\">\n                  Quiz App\n                </Typography>\n                <Box className=\"form-card\">\n    <form onSubmit={handleSubmit} className=\"form-box\">\n      <TextFieldCom  className=\"input-name\" >Name</TextFieldCom>\n      <SelectField className=\"input-name\" options={categoryOptions} label=\"Category\" />\n      <SelectField className=\"input-name\" options={difficultyOption} label=\"Difficulty\" />\n      <SelectField className=\"input-name\" options={typeOptions} label=\"Limit\" />\n      <Snackbar className=\"input-name\"   open={open} autoHideDuration={6000} onClose={()=>setOpen(false)}>\n      <Alert severity=\"error\">{result}</Alert>\n      </Snackbar>\n     \n      <Box mt={3} width=\"100%\">\n        <Button fullWidth variant=\"contained\" type=\"submit\">\n          Get Started\n        </Button>\n      </Box>\n    </form>\n    </Box>\n    </Grid>\n\n  );\n};\n\nexport default Setting;\n","/home/deepak/Videos/quiz-app/src/Redux/reducer.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Components/404/Error.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Components/TextField.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Components/SelectField.jsx",["133","134"],[],"import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\n\nimport { handleCategoryChange,handleLimitChange,handleDifficultyChange } from \"../Redux/action\";\n\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst SelectField = (props) => {\n  const { label, options } = props;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    switch (label) {\n      case \"Category\":\n        dispatch(handleCategoryChange(event.target.value));\n        break;\n      case \"Difficulty\":\n        dispatch(handleDifficultyChange(event.target.value));\n        break;\n      case \"Limit\":\n        dispatch(handleLimitChange(event.target.value));\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box mt={3} width=\"100%\">\n      <FormControl size=\"small\" fullWidth sx={{textAlign:\"left\"}}>\n        {/* <InputLabel className=\"input-txt\">{label}</InputLabel> */}\n        <Select  className=\"input-txt\" placeholder={label} required sx={{textAlign:\"left\"}} value={value} label={label} onChange={handleChange}  sx={{color:\"#fff\",border:\"2px solid #fff\",borderRadius:\"8px\"}} displayEmpty\n        fullWidth\n        >\n           <MenuItem value=\"\" color=\"#fff\" disabled>\n          {label}\n        </MenuItem>\n          {options.map(({ id, name }) => (\n            <MenuItem value={id} key={id} >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default SelectField;\n","/home/deepak/Videos/quiz-app/src/hooks/Axios.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Redux/action.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Redux/actionTypes.jsx",[],[],"/home/deepak/Videos/quiz-app/src/Pages/Admin.jsx",["135","136","137"],[],"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { CardActionArea, Container } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@mui/material/Typography';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nexport default function Admin() {\n    const history = useHistory();\nconst dispatch = useDispatch()\n   const viewAnswers = async (data)=>{\n    history.push({\n        pathname:\"/viewQuestion\",\n        state:{\n            userData:data\n        }\n    })\n   \n   }\n\n\n    const [userdatas, setUserDatas] = React.useState([])\n    React.useEffect(() => {\n        let userDetails = localStorage.getItem(\"userDetails\")\n        let data = [...new Set(JSON.parse(userDetails))]\n        setUserDatas(data)\n    }, [])\n    return (\n        <Container maxWidth={\"lg\"}>\n        <Box mt={5} spacing={2}>\n            <Grid container spacing={{ xs: 0 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n                {userdatas.length > 0 ? userdatas?.map((data, index) => (\n\n                    <Grid item xs={0} sm={4} md={4} key={index}>\n                        <Item>\n                            <Card >\n                                <CardActionArea onClick={() => {\n                                    viewAnswers(data)\n                                }}>\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\" >\n                                            {data.name}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" >\n                                            Category : {data.question_category}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" >\n                                            Difficulty : {data.question_difficulty}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" >\n                                            Score : {data.score}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" >\n                                            Percentage : {data.percentageValue}\n                                        </Typography>\n                                        <Typography sx={{ color: \"#000\" }} textAlign={\"left\"} variant=\"body2\" color={\"#000\"}>\n                                            Click to view answers\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Item>\n                    </Grid>\n                )) :\n                    <Typography textAlign={\"center\"} variant=\"h5\" color=\"text.secondary\">\n                        NO USER FOUND\n                    </Typography>\n                }\n            </Grid>\n        </Box>\n        </Container>\n    );\n}","/home/deepak/Videos/quiz-app/src/Pages/viewQuestions.jsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],[],"\nimport React from \"react\";\nimport { Button, CircularProgress, Typography, useRadioGroup } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { decode } from \"html-entities\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\nimport {Container} from \"@mui/material\";\nimport { handleScoreChnage,userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst answerResponse = {\n    \"answer_a\":\"Option A\",\n    \"answer_b\":\"Option B\",\n    \"answer_c\":\"Option C\",\n    \"answer_d\":\"Option D\",\n    \"answer_e\":\"Option E\",\n    \"answer_f\":\"Option F\",\n}\n\nconst ViewQuestion = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector((state) => state);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const[userData,setUserData] = useState({})\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false)\n  const [intialRender, setInitialRender] = useState(false)\n\n  useEffect(() => {\n    setUserData(history.location.state.userData)\n    console.log(\"looo\",userData);\n  }, [])\n\n  const handleListItemClick = (\n    number\n  ) => {\n    setSelectedIndex(number);\n  };\n  useEffect(() => {\n    if (userData.question_answers?.length) {\n      const question = userData.question_answers[questionIndex];\n      console.log(\"question \", userData.question)\n      let answers = []\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n\n        if (value)\n          answers.push({\n            [key]: value\n          })\n      }\n      answers.splice(\n        getRandomInt(question.answers.length),\n        0,\n        // question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [userData.question_answers, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (name, next) => {\n    const question = question_answers[questionIndex];\n    if (next && questionIndex + 1 < question_answers.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  return (\n    <><Container maxWidth={\"xl\"} >\n    <Box mt={2} mb={2} display={\"flex\"} justifyContent={\"space-between\"}>\n        <Typography variant=\"h4\" className=\"\">Welcome {userData.name}</Typography>\n        <Typography variant=\"h4\">{userData.question_category}</Typography>\n        <Typography variant=\"h4\">Questions {questionIndex + 1 + \"/\" + userData.question_answers.length}</Typography>\n      </Box>\n      </Container>\n      <Container  maxWidth={\"md\"}>\n      <Card  className=\"question-card\"  sx={{minHeight:\"80vh\"}}>\n        <CardContent className=\"card-question\">\n          <Typography mt={5} className=\"qust\">\n          </Typography>\n          {options.map((data, id) => (\n           \n            <Box mt={2} key={id}>\n              { console.log(\"++++++\",data,id)}\n              <List  component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton sx={{boxShadow:\"2\"}}name={Object.keys(data)}\n                  selected={ userData.user_answers.find((e)=>e.questionId == userData.question_answers[questionIndex].id)?.selectedAnswer == Object.keys(data)[0] }\n                >\n                  <ListItemText primary={Object.values(data)} />\n                </ListItemButton>\n              </List>\n            \n            </Box>\n          ))}\n      \n         \n        </CardContent>\n        <Typography variant=\"h3\">Score {userData.score}/{userData.question_answers.length}</Typography>\n        <CardActions sx={{padding:\"30px\"}} >\n      \n            <Box display={\"flex\"} width={\"100%\"} justifyContent={\"flex-end\"}>\n             {userData.question_answers.length == questionIndex+1 ?   <Button variant=\"contained\" onClick={() => {history.push(\"/admin\")}}>Back to Dashboard</Button> :\n              <Button variant=\"contained\" onClick={() => {setQuestionIndex(questionIndex+1)}}>NEXT</Button>\n             }\n            </Box>\n           \n          </CardActions>\n      </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ViewQuestion;\n","/home/deepak/Videos/quiz-app/src/service-worker.js",[],["165","166","167","168"],["169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"179","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":24},{"ruleId":"175","severity":1,"message":"180","line":7,"column":10,"nodeType":"177","messageId":"178","endLine":7,"endColumn":27},{"ruleId":"175","severity":1,"message":"181","line":7,"column":29,"nodeType":"177","messageId":"178","endLine":7,"endColumn":46},{"ruleId":"175","severity":1,"message":"182","line":7,"column":48,"nodeType":"177","messageId":"178","endLine":7,"endColumn":59},{"ruleId":"175","severity":1,"message":"183","line":17,"column":9,"nodeType":"177","messageId":"178","endLine":17,"endColumn":17},{"ruleId":"175","severity":1,"message":"184","line":20,"column":11,"nodeType":"177","messageId":"178","endLine":20,"endColumn":30},{"ruleId":"175","severity":1,"message":"185","line":20,"column":32,"nodeType":"177","messageId":"178","endLine":20,"endColumn":36},{"ruleId":"175","severity":1,"message":"186","line":20,"column":38,"nodeType":"177","messageId":"178","endLine":20,"endColumn":52},{"ruleId":"175","severity":1,"message":"187","line":20,"column":54,"nodeType":"177","messageId":"178","endLine":20,"endColumn":70},{"ruleId":"175","severity":1,"message":"188","line":20,"column":72,"nodeType":"177","messageId":"178","endLine":20,"endColumn":89},{"ruleId":"175","severity":1,"message":"189","line":20,"column":91,"nodeType":"177","messageId":"178","endLine":20,"endColumn":96},{"ruleId":"175","severity":1,"message":"190","line":20,"column":98,"nodeType":"177","messageId":"178","endLine":20,"endColumn":110},{"ruleId":"191","severity":1,"message":"192","line":26,"column":36,"nodeType":"193","messageId":"194","endLine":26,"endColumn":38},{"ruleId":"195","severity":1,"message":"196","line":29,"column":6,"nodeType":"197","endLine":29,"endColumn":8,"suggestions":"198"},{"ruleId":"171","replacedBy":"199"},{"ruleId":"173","replacedBy":"200"},{"ruleId":"175","severity":1,"message":"201","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":16},{"ruleId":"175","severity":1,"message":"202","line":16,"column":8,"nodeType":"177","messageId":"178","endLine":16,"endColumn":20},{"ruleId":"175","severity":1,"message":"203","line":21,"column":10,"nodeType":"177","messageId":"178","endLine":21,"endColumn":15},{"ruleId":"175","severity":1,"message":"204","line":32,"column":5,"nodeType":"177","messageId":"178","endLine":32,"endColumn":18},{"ruleId":"175","severity":1,"message":"205","line":48,"column":11,"nodeType":"177","messageId":"178","endLine":48,"endColumn":19},{"ruleId":"175","severity":1,"message":"206","line":52,"column":10,"nodeType":"177","messageId":"178","endLine":52,"endColumn":20},{"ruleId":"175","severity":1,"message":"207","line":52,"column":22,"nodeType":"177","messageId":"178","endLine":52,"endColumn":35},{"ruleId":"195","severity":1,"message":"196","line":83,"column":6,"nodeType":"197","endLine":83,"endColumn":39,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"192","line":105,"column":20,"nodeType":"193","messageId":"194","endLine":105,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":124,"column":20,"nodeType":"193","messageId":"194","endLine":124,"endColumn":22},{"ruleId":"175","severity":1,"message":"209","line":3,"column":42,"nodeType":"177","messageId":"178","endLine":3,"endColumn":51},{"ruleId":"175","severity":1,"message":"205","line":46,"column":11,"nodeType":"177","messageId":"178","endLine":46,"endColumn":19},{"ruleId":"195","severity":1,"message":"210","line":53,"column":6,"nodeType":"197","endLine":53,"endColumn":8,"suggestions":"211"},{"ruleId":"175","severity":1,"message":"212","line":6,"column":23,"nodeType":"177","messageId":"178","endLine":6,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":35,"column":146,"nodeType":"215","messageId":"216","endLine":35,"endColumn":208},{"ruleId":"175","severity":1,"message":"217","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":14},{"ruleId":"175","severity":1,"message":"218","line":10,"column":23,"nodeType":"177","messageId":"178","endLine":10,"endColumn":34},{"ruleId":"175","severity":1,"message":"219","line":23,"column":7,"nodeType":"177","messageId":"178","endLine":23,"endColumn":15},{"ruleId":"175","severity":1,"message":"220","line":3,"column":48,"nodeType":"177","messageId":"178","endLine":3,"endColumn":61},{"ruleId":"175","severity":1,"message":"201","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":16},{"ruleId":"175","severity":1,"message":"202","line":16,"column":8,"nodeType":"177","messageId":"178","endLine":16,"endColumn":20},{"ruleId":"175","severity":1,"message":"181","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":27},{"ruleId":"175","severity":1,"message":"182","line":20,"column":28,"nodeType":"177","messageId":"178","endLine":20,"endColumn":39},{"ruleId":"175","severity":1,"message":"203","line":21,"column":10,"nodeType":"177","messageId":"178","endLine":21,"endColumn":15},{"ruleId":"175","severity":1,"message":"221","line":27,"column":7,"nodeType":"177","messageId":"178","endLine":27,"endColumn":21},{"ruleId":"175","severity":1,"message":"188","line":38,"column":5,"nodeType":"177","messageId":"178","endLine":38,"endColumn":22},{"ruleId":"175","severity":1,"message":"184","line":39,"column":5,"nodeType":"177","messageId":"178","endLine":39,"endColumn":24},{"ruleId":"175","severity":1,"message":"204","line":40,"column":5,"nodeType":"177","messageId":"178","endLine":40,"endColumn":18},{"ruleId":"175","severity":1,"message":"189","line":42,"column":5,"nodeType":"177","messageId":"178","endLine":42,"endColumn":10},{"ruleId":"175","severity":1,"message":"185","line":43,"column":5,"nodeType":"177","messageId":"178","endLine":43,"endColumn":9},{"ruleId":"175","severity":1,"message":"219","line":48,"column":9,"nodeType":"177","messageId":"178","endLine":48,"endColumn":17},{"ruleId":"175","severity":1,"message":"205","line":53,"column":11,"nodeType":"177","messageId":"178","endLine":53,"endColumn":19},{"ruleId":"175","severity":1,"message":"222","line":57,"column":10,"nodeType":"177","messageId":"178","endLine":57,"endColumn":23},{"ruleId":"175","severity":1,"message":"206","line":58,"column":10,"nodeType":"177","messageId":"178","endLine":58,"endColumn":20},{"ruleId":"175","severity":1,"message":"207","line":58,"column":22,"nodeType":"177","messageId":"178","endLine":58,"endColumn":35},{"ruleId":"175","severity":1,"message":"223","line":59,"column":10,"nodeType":"177","messageId":"178","endLine":59,"endColumn":22},{"ruleId":"175","severity":1,"message":"224","line":59,"column":24,"nodeType":"177","messageId":"178","endLine":59,"endColumn":40},{"ruleId":"195","severity":1,"message":"225","line":64,"column":6,"nodeType":"197","endLine":64,"endColumn":8,"suggestions":"226"},{"ruleId":"175","severity":1,"message":"227","line":66,"column":9,"nodeType":"177","messageId":"178","endLine":66,"endColumn":28},{"ruleId":"195","severity":1,"message":"228","line":91,"column":6,"nodeType":"197","endLine":91,"endColumn":48,"suggestions":"229"},{"ruleId":"175","severity":1,"message":"230","line":101,"column":9,"nodeType":"177","messageId":"178","endLine":101,"endColumn":26},{"ruleId":"175","severity":1,"message":"231","line":102,"column":11,"nodeType":"177","messageId":"178","endLine":102,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":127,"column":75,"nodeType":"193","messageId":"194","endLine":127,"endColumn":77},{"ruleId":"191","severity":1,"message":"192","line":127,"column":139,"nodeType":"193","messageId":"194","endLine":127,"endColumn":141},{"ruleId":"191","severity":1,"message":"192","line":142,"column":48,"nodeType":"193","messageId":"194","endLine":142,"endColumn":50},{"ruleId":"232","severity":2,"message":"233","line":22,"column":18,"nodeType":"177","messageId":"234","endLine":22,"endColumn":22,"suppressions":"235"},{"ruleId":"232","severity":2,"message":"233","line":53,"column":31,"nodeType":"177","messageId":"234","endLine":53,"endColumn":35,"suppressions":"236"},{"ruleId":"232","severity":2,"message":"233","line":66,"column":1,"nodeType":"177","messageId":"234","endLine":66,"endColumn":5,"suppressions":"237"},{"ruleId":"232","severity":2,"message":"233","line":68,"column":5,"nodeType":"177","messageId":"234","endLine":68,"endColumn":9,"suppressions":"238"},{"ruleId":"171","replacedBy":"239"},{"ruleId":"173","replacedBy":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'LinearProgress' is defined but never used.","'handleLimitChange' is defined but never used.","'handleScoreChnage' is defined but never used.","'userAnswers' is defined but never used.","'disptach' is assigned a value but never used.","'question_difficulty' is assigned a value but never used.","'name' is assigned a value but never used.","'question_limit' is assigned a value but never used.","'question_answers' is assigned a value but never used.","'question_category' is assigned a value but never used.","'score' is assigned a value but never used.","'user_answers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["243"],["241"],["242"],"'decode' is defined but never used.","'ListItemIcon' is defined but never used.","'array' is defined but never used.","'question_type' is assigned a value but never used.","'response' is assigned a value but never used.","'enableNext' is assigned a value but never used.","'setEnableNext' is assigned a value but never used.",["244"],"'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'clearState'. Either include it or remove the dependency array.",["245"],"'InputLabel' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Button' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.","'useRadioGroup' is defined but never used.","'answerResponse' is assigned a value but never used.","'selectedIndex' is assigned a value but never used.","'intialRender' is assigned a value but never used.","'setInitialRender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history.location.state.userData' and 'userData'. Either include them or remove the dependency array.",["246"],"'handleListItemClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData.question'. Either include it or remove the dependency array.",["247"],"'handleClickAnswer' is assigned a value but never used.","'question' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'self'.","defaultMessage",["248"],["249"],["250"],["251"],["241"],["242"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"kind":"262","justification":"263"},{"kind":"262","justification":"263"},{"kind":"262","justification":"263"},{"kind":"262","justification":"263"},"Update the dependencies array to be: [history]",{"range":"264","text":"265"},"Update the dependencies array to be: [question_answers, questionIndex, history]",{"range":"266","text":"267"},"Update the dependencies array to be: [clearState]",{"range":"268","text":"269"},"Update the dependencies array to be: [history.location.state.userData, userData]",{"range":"270","text":"271"},"Update the dependencies array to be: [userData.question_answers, questionIndex, userData.question]",{"range":"272","text":"273"},"directive","",[1094,1096],"[history]",[2216,2249],"[question_answers, questionIndex, history]",[1824,1826],"[clearState]",[1969,1971],"[history.location.state.userData, userData]",[2624,2666],"[userData.question_answers, questionIndex, userData.question]"]