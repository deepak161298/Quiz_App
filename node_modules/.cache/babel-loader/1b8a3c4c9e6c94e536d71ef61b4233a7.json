{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage } from \"../Redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Final = () => {\n  _s();\n\n  const disptach = useDispatch();\n  const history = useHistory();\n  const {\n    score\n  } = useSelector(state => state);\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n\n  var percentageValue = (score / score * 100).toFixed(3);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 30,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      fontWeight: \"bold\",\n      mb: 3,\n      children: [\"Final Score \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      fontWeight: \"bold\",\n      mb: 3,\n      children: percentageValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleBackToSettings,\n      variant: \"outlined\",\n      children: \"back to settings!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Final, \"+ttYs9p8US70C65c7SPYuASMivc=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Final;\nexport default Final;\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Typography","Box","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","Final","disptach","history","score","state","handleBackToSettings","push","percentageValue","toFixed"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAoD,iBAApD;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYR,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAA7B;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjCJ,IAAAA,QAAQ,CAACF,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAE,IAAAA,QAAQ,CAACH,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAI,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GAJD;;AAKA,MAAIC,eAAe,GAAG,CAAEJ,KAAK,GAACA,KAAP,GAAgB,GAAjB,EAAsBK,OAAtB,CAA8B,CAA9B,CAAtB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA,4BAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,UAAU,EAAC,MAApC;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA,iCACeL,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,UAAU,EAAC,MAApC;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA,gBACCI;AADD;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,oBAAjB;AAAuC,MAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAML,K;UACaN,W,EACDE,U,EACED,W;;;KAHdK,K;AA4BN,eAAeA,KAAf","sourcesContent":["import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport {handleLimitChange, handleScoreChnage } from \"../Redux/action\";\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n  const { score } = useSelector((state) => state);\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n  var percentageValue = ((score/score) * 100).toFixed(3);\n\n  return (\n    <Box mt={30}>\n    \n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n        Final Score {score}\n      </Typography>\n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n      {percentageValue}\n      </Typography>\n      <Button onClick={handleBackToSettings} variant=\"outlined\">\n        back to settings!\n      </Button>\n    </Box>\n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}