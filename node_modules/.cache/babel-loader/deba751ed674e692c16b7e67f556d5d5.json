{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Question.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, CircularProgress, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { decode } from \"html-entities\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\nimport { handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst Questions = () => {\n  _s();\n\n  const {\n    question_category,\n    question_difficulty,\n    user_answers,\n    question_type,\n    question_limit,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector(state => state);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_question}`; // if (question_category) {\n  //   apiUrl = apiUrl.concat(`&category=${question_category}`);\n  // }\n  // if (question_difficulty) {\n  //   apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  // }\n  // if (question_type) {\n  //   apiUrl = apiUrl.concat(`&type=${question_type}`);\n  // }\n\n  useEffect(() => {\n    console.log(\"inital : \", question_answers);\n  }, []);\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false);\n  const [intialRender, setInitialRender] = useState(true);\n\n  const handleListItemClick = number => {\n    setSelectedIndex(number);\n  };\n\n  useEffect(() => {\n    if (question_answers !== null && question_answers !== void 0 && question_answers.length) {\n      const question = question_answers[questionIndex];\n      console.log(\"question \", question.answers);\n      let answers = [];\n\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n        if (value) answers.push({\n          [key]: value\n        });\n      }\n\n      answers.splice(getRandomInt(question.answers.length), 0 // question.correct_answer\n      );\n      setOptions(answers);\n    } else {\n      history.push(\"/\");\n    }\n  }, [question_answers, questionIndex]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleClickAnswer = (dataName, next) => {\n    const question = question_answers[questionIndex];\n\n    if (next && questionIndex + 1 < question_answers.length) {\n      console.log(dataName, \"+++++\", question.correct_answer);\n\n      if (dataName == question.correct_answer) {\n        alert(\"scorechange\");\n        dispatch(handleScoreChnage(score + 1));\n      } else {\n        console.log(\"check\", question.correct_answers[dataName + \"_correct\"]);\n\n        if (question.correct_answers[dataName + \"_correct\"] === \"true\") {\n          console.log(dataName, \"--------\", question.correct_answer);\n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n\n      console.log(\"selected answer : \", dataName);\n      dispatch(userAnswers(dataName));\n      setInitialRender(true);\n      setQuestionIndex(questionIndex + 1);\n      setSelectedIndex(0);\n    } else if (dataName, next) {\n      if (dataName == question.correct_answer) {\n        alert(\"scorechange\");\n        dispatch(handleScoreChnage(score + 1));\n      } else {\n        console.log(\"check\", question.correct_answers[dataName + \"_correct\"]);\n\n        if (question.correct_answers[dataName + \"_correct\"] === \"true\") {\n          console.log(dataName, \"--------\", question.correct_answer);\n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n\n      alert(\"last\");\n      dispatch(userAnswers(dataName));\n      let percentageValue = (score / question_answers.length * 100).toFixed(0);\n\n      if (name) {\n        const userResult = {\n          name: name,\n          question_difficulty: question_difficulty,\n          question_limit: question_limit,\n          question_category,\n          score: score,\n          user_answers: user_answers,\n          percentageValue: percentageValue,\n          question_answers: question_answers\n        };\n        let getUserDetails = localStorage.getItem(\"userDetails\");\n\n        if (!getUserDetails) {\n          var userArray = [];\n          localStorage.setItem(\"userDetails\", JSON.stringify(userArray));\n        } else {\n          console.log(\"data\", localStorage.getItem(\"userDetails\"));\n\n          if (localStorage.getItem(\"userDetails\")) {\n            localStorage.setItem(\"userDetails\", JSON.stringify([...JSON.parse(localStorage.getItem(\"userDetails\")), userResult]));\n          }\n        }\n      }\n\n      window.location.href = `/score?scoreValue=${score}&pecentageValue=${percentageValue}&limit=${question_answers.length}`; //  history.push(\"/score\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        mb: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Welcome \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: question_category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Questions \", questionIndex + 1 + \"/\" + question_answers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"90vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"question-card\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"card-question\",\n          sx: {\n            background: \"#fff\",\n            opacity: \"0.3\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            mt: 5,\n            sx: {\n              color: \"#000\",\n              opacity: \"1\"\n            },\n            children: question_answers[questionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), options.map((data, id) => /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              component: \"nav\",\n              \"aria-label\": \"main mailbox folders\",\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                sx: {\n                  boxShadow: \"2\"\n                },\n                name: Object.keys(data),\n                selected: !intialRender ? id === selectedIndex : false,\n                onClick: () => {\n                  setInitialRender(false);\n                  handleListItemClick(id);\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: Object.values(data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              width: \"100%\",\n              justifyContent: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: intialRender,\n                onClick: e => {\n                  handleClickAnswer(...Object.keys(options[selectedIndex]), true);\n                },\n                variant: \"contained\",\n                size: \"medium\",\n                children: questionIndex + 1 === question_answers.length ? \"SUBMIT\" : \"NEXT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"ln6kyPjKXjPtQ58ytNTs6mzGbyk=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useAxios];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Question.jsx"],"names":["React","Button","CircularProgress","Container","Typography","Box","decode","useEffect","useState","useDispatch","useSelector","useHistory","Card","CardActions","CardContent","List","ListItemButton","ListItemIcon","ListItemText","useAxios","handleScoreChnage","userAnswers","array","getRandomInt","max","Math","floor","random","Questions","question_category","question_difficulty","user_answers","question_type","question_limit","amount_of_question","score","name","question_answers","state","history","dispatch","apiUrl","console","log","response","loading","url","questionIndex","setQuestionIndex","options","setOptions","selectedIndex","setSelectedIndex","enableNext","setEnableNext","intialRender","setInitialRender","handleListItemClick","number","length","question","answers","key","value","Object","entries","push","splice","handleClickAnswer","dataName","next","correct_answer","alert","correct_answers","percentageValue","toFixed","userResult","getUserDetails","localStorage","getItem","userArray","setItem","JSON","stringify","parse","window","location","href","display","alignItems","justifyContent","minHeight","background","opacity","color","map","data","id","boxShadow","keys","values","e"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Button, CircularProgress, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { decode } from \"html-entities\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\n\nimport { handleScoreChnage,userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst Questions = () => {\n  const {\n    question_category,\n    question_difficulty,\n    user_answers,\n    question_type,\n    question_limit,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector((state) => state);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n  // if (question_category) {\n  //   apiUrl = apiUrl.concat(`&category=${question_category}`);\n  // }\n\n  // if (question_difficulty) {\n  //   apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  // }\n\n  // if (question_type) {\n  //   apiUrl = apiUrl.concat(`&type=${question_type}`);\n  // }\n  useEffect(() => {\n    console.log(\"inital : \", question_answers)\n  }, [])\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false)\n  const [intialRender, setInitialRender] = useState(true)\n\n  const handleListItemClick = (\n    number\n  ) => {\n    setSelectedIndex(number);\n  };\n  useEffect(() => {\n    \n    if (question_answers?.length) {\n      const question = question_answers[questionIndex];\n      console.log(\"question \", question.answers)\n      let answers = []\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n\n        if (value)\n          answers.push({\n            [key]: value\n          })\n      }\n      answers.splice(\n        getRandomInt(question.answers.length),\n        0,\n        // question.correct_answer\n      );\n      setOptions(answers);\n    }else{\n      history.push(\"/\")\n    }\n  }, [question_answers, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (dataName, next) => {\n    const question = question_answers[questionIndex];\n    if (next && questionIndex + 1 < question_answers.length) {\n      console.log(dataName,\"+++++\",question.correct_answer);\n\n      if (dataName == question.correct_answer) {\n        alert(\"scorechange\")\n        dispatch(handleScoreChnage(score + 1));\n      }else{\n        console.log(\"check\",question.correct_answers[dataName+\"_correct\"])\n        if(question.correct_answers[dataName+\"_correct\"] === \"true\"){\n          console.log(dataName,\"--------\",question.correct_answer);\n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n\n      console.log(\"selected answer : \",dataName)\n      dispatch(userAnswers(dataName))\n      setInitialRender(true)\n      setQuestionIndex(questionIndex + 1);\n      setSelectedIndex(0)\n    } else if (dataName,next) {\n      if (dataName == question.correct_answer) {\n        alert(\"scorechange\")\n        dispatch(handleScoreChnage(score + 1));\n      }else{\n        console.log(\"check\",question.correct_answers[dataName+\"_correct\"])\n        if(question.correct_answers[dataName+\"_correct\"] === \"true\"){\n          console.log(dataName,\"--------\",question.correct_answer);\n          dispatch(handleScoreChnage(score + 1));\n        }\n      }\n      alert(\"last\") \n      dispatch(userAnswers(dataName))\n      let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n      if(name){\n        const userResult = {\n          name: name,\n          question_difficulty: question_difficulty,\n          question_limit: question_limit,\n          question_category,\n          score: score,\n          user_answers: user_answers,\n          percentageValue: percentageValue,\n          question_answers: question_answers\n        }\n    \n        let getUserDetails = localStorage.getItem(\"userDetails\")\n    \n        if (!getUserDetails) {\n          var userArray = []\n          localStorage.setItem(\"userDetails\", JSON.stringify(userArray))\n        } else {\n          console.log(\"data\", localStorage.getItem(\"userDetails\"))\n          if (localStorage.getItem(\"userDetails\")) {\n            localStorage.setItem(\"userDetails\", JSON.stringify([...JSON.parse(localStorage.getItem(\"userDetails\")), userResult]))\n          }\n        }\n      }\n\n      window.location.href = `/score?scoreValue=${score}&pecentageValue=${percentageValue}&limit=${question_answers.length}`\n      //  history.push(\"/score\");\n    }\n  };\n\n  return (\n    <>\n<Container maxWidth={\"xl\"} >\n      <Box mt={2} mb={2} display={\"flex\"} justifyContent={\"space-between\"}>\n        <Typography variant=\"h5\">Welcome {name}</Typography>\n        <Typography variant=\"h4\">{question_category}</Typography>\n        <Typography variant=\"h6\">Questions {questionIndex + 1 + \"/\" + question_answers.length}</Typography>\n      </Box>\n      </Container>\n      <Container maxWidth={\"md\"} sx={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",minHeight:\"90vh\",}}>\n      <Card  className=\"question-card\" >\n        <CardContent className=\"card-question\" sx={{background:\"#fff\",\n      opacity:\"0.3\"}}>\n          <Typography mt={5} sx={{color:\"#000\",opacity:\"1\"}}>\n            {/* {decode(response.results[questionIndex].question)} */}\n            {question_answers[questionIndex].question}\n          </Typography>\n          {options.map((data, id) => (\n            <Box mt={2} key={id}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton sx={{boxShadow:\"2\"}} name={Object.keys(data)}\n                  selected={!intialRender ? id === selectedIndex : false}\n                  onClick={() => {\n                    setInitialRender(false);\n                    handleListItemClick(id);\n                  }}\n                >\n                  <ListItemText primary={Object.values(data)} />\n                </ListItemButton>\n              </List>\n              {/* <Button name={Object.keys(data)} onClick={handleClickAnswer} variant=\"contained\">\n            {Object.values(data)}\n          </Button> */}\n            </Box>\n          ))}\n          {/* <Box mt={5}>\n            Score: {score} / {question_answers.length}\n          </Box> */}\n          <CardActions >\n            <Box display={\"flex\"} width={\"100%\"} justifyContent={\"flex-end\"}>\n              {/* <Button variant=\"contained\" size=\"medium\">PREV</Button> */}\n              <Button disabled={intialRender} onClick={(e) => { handleClickAnswer(...Object.keys(options[selectedIndex]), true) }} variant=\"contained\" size=\"medium\">\n                {questionIndex + 1 === question_answers.length ? \"SUBMIT\" : \"NEXT\"}\n              </Button>\n            </Box>\n          </CardActions>\n        </CardContent>\n      </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}