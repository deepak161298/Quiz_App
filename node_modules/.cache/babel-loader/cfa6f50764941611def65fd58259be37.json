{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Final = () => {\n  _s();\n\n  const disptach = useDispatch();\n  const history = useHistory();\n  const {\n    question_difficulty,\n    name,\n    question_limit,\n    question_category,\n    score,\n    user_answers\n  } = useSelector(state => state);\n  let percentageValue = (score / question_answers.length * 100).toFixed(0);\n  useEffect(() => {\n    const userResult = {\n      name: name,\n      question_difficulty: question_difficulty,\n      question_limit: question_limit,\n      question_category,\n      score: score,\n      user_answers: user_answers\n    };\n  }, []);\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 30,\n    children: [console.log(\"final answers : \", user_answers), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          fontWeight: \"bold\",\n          mb: 3,\n          children: [\"Final Score \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          fontWeight: \"bold\",\n          mb: 3,\n          children: [\"Your Percentage : \", percentageValue + \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBackToSettings,\n          variant: \"outlined\",\n          children: \"back to settings!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Final, \"h/jGOtVWHYPN7ldZH/Ow117aplM=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Final;\nexport default Final;\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Typography","Box","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","userAnswers","Card","CardActions","CardContent","useEffect","Final","disptach","history","question_difficulty","name","question_limit","question_category","score","user_answers","state","percentageValue","question_answers","length","toFixed","userResult","handleBackToSettings","push","console","log","minWidth","justifyContent"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,WAA/C,QAAkE,iBAAlE;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM;AAAEY,IAAAA,mBAAF;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,cAA7B;AAA6CC,IAAAA,iBAA7C;AAAgEC,IAAAA,KAAhE;AAAuEC,IAAAA;AAAvE,MAAyFlB,WAAW,CAAEmB,KAAD,IAAWA,KAAZ,CAA1G;AACA,MAAIC,eAAe,GAAG,CAAEH,KAAK,GAAGI,gBAAgB,CAACC,MAA1B,GAAoC,GAArC,EAA0CC,OAA1C,CAAkD,CAAlD,CAAtB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAG;AACjBV,MAAAA,IAAI,EAACA,IADY;AAEjBD,MAAAA,mBAAmB,EAACA,mBAFH;AAGjBE,MAAAA,cAAc,EAACA,cAHE;AAIjBC,MAAAA,iBAJiB;AAKjBC,MAAAA,KAAK,EAACA,KALW;AAMjBC,MAAAA,YAAY,EAACA;AANI,KAAnB;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMO,oBAAoB,GAAG,MAAM;AACjCd,IAAAA,QAAQ,CAACP,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAO,IAAAA,QAAQ,CAACR,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAS,IAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,GAJD;;AAOA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA,eACGC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCV,YAAhC,CADH,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,UAAU,EAAC,MAApC;AAA2C,UAAA,EAAE,EAAE,CAA/C;AAAA,qCACeZ,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,UAAU,EAAC,MAApC;AAA2C,UAAA,EAAE,EAAE,CAA/C;AAAA,2CACqBG,eAAe,GAAG,GADvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEU,UAAAA,cAAc,EAAE;AAAlB,SAAjB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,oBAAjB;AAAuC,UAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CD;;GAAMf,K;UACaX,W,EACDE,U,EAE+ED,W;;;KAJ3FU,K;AA+CN,eAAeA,KAAf","sourcesContent":["import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n\n  const { question_difficulty, name, question_limit, question_category, score, user_answers, } = useSelector((state) => state);\n  let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n  useEffect(() => {\n    const userResult = {\n      name:name,\n      question_difficulty:question_difficulty,\n      question_limit:question_limit,\n      question_category,\n      score:score,\n      user_answers:user_answers\n    }\n  }, [])\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n \n\n  return (\n    <Box mt={30}>\n      {console.log(\"final answers : \", user_answers)}\n      <Card sx={{ minWidth: 275 }}>\n        <CardContent>\n          <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n            Final Score {score}\n          </Typography>\n          <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n            Your Percentage : {percentageValue + \"%\"}\n          </Typography>\n        </CardContent>\n        <CardActions sx={{ justifyContent: \"center\" }}>\n          <Button onClick={handleBackToSettings} variant=\"outlined\">\n            back to settings!\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n\n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}