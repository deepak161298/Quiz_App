{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport Axios from \"../hooks/Axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Setting = () => {\n  _s();\n\n  const {\n    response,\n    loading,\n    error\n  } = Axios({\n    url: \"/api_category.php\"\n  });\n  const history = useHistory();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mt: 20,\n      color: \"red\",\n      children: \"Something went wrong!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  const difficultyOption = [{\n    id: \"easy\",\n    name: \"Easy\"\n  }, {\n    id: \"medium\",\n    name: \"Medium\"\n  }, {\n    id: \"hard\",\n    name: \"Hard\"\n  }];\n  const typeOptions = [{\n    id: \"multiple\",\n    name: \"Multiple choise\"\n  }, {\n    id: \"boolean\",\n    name: \"True/False\"\n  }];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    history.push(\"/question\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\"\n        },\n        required: true,\n        id: \"outlined-required\",\n        label: \"Name *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: response.trivia_categories,\n      label: \"category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: difficultyOption,\n      label: \"Difficulty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: typeOptions,\n      label: \"Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Setting, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Setting;\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx"],"names":["React","useHistory","Button","CircularProgress","TextField","Typography","Box","SelectField","TextFieldCom","Axios","Setting","response","loading","error","url","history","difficultyOption","id","name","typeOptions","handleSubmit","event","preventDefault","push","width","trivia_categories"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\n\nimport Axios from \"../hooks/Axios\";\n\nconst Setting = () => {\n  const { response, loading, error } = Axios({ url: \"/api_category.php\" });\n\n  const history = useHistory();\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong!!\n      </Typography>\n    );\n  }\n\n  const difficultyOption = [\n    { id: \"easy\", name: \"Easy\" },\n    { id: \"medium\", name: \"Medium\" },\n    { id: \"hard\", name: \"Hard\" },\n  ];\n\n  const typeOptions = [\n    { id: \"multiple\", name: \"Multiple choise\" },\n    { id: \"boolean\", name: \"True/False\" },\n  ];\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    history.push(\"/question\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n       <Box mt={3} width=\"100%\">\n       <TextField\n          sx={{width:\"100%\"}}\n          required\n          id=\"outlined-required\"\n          label=\"Name *\"\n        />\n            </Box>\n      <SelectField options={response.trivia_categories} label=\"category\" />\n      <SelectField options={difficultyOption} label=\"Difficulty\" />\n      <SelectField options={typeOptions} label=\"Type\" />\n      \n      <Box mt={3} width=\"100%\">\n        <Button fullWidth variant=\"contained\" type=\"submit\">\n          Get Started\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}