{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { CardActionArea, Container } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@mui/material/Typography';\nimport { getQuestions } from '../hooks/Axios';\nimport { questionAnswers } from '../Redux/action';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\n_c = Item;\nexport default function Admin() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const viewAnswers = async data => {\n    history.push({\n      pathname: \"/viewQuestion\",\n      state: {\n        userData: data\n      }\n    });\n  };\n\n  const [userdatas, setUserDatas] = React.useState([]);\n  React.useEffect(() => {\n    let userDetails = localStorage.getItem(\"userDetails\");\n    let data = [...new Set(JSON.parse(userDetails))];\n    setUserDatas(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: {\n          xs: 0\n        },\n        columns: {\n          xs: 4,\n          sm: 8,\n          md: 12\n        },\n        children: userdatas.length > 0 ? userdatas === null || userdatas === void 0 ? void 0 : userdatas.map((data, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"admin-card\",\n              children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                onClick: () => {\n                  viewAnswers(data);\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h5\",\n                    component: \"div\",\n                    color: \"#fff\",\n                    children: data.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"left\",\n                    variant: \"body2\",\n                    color: \"#fff\",\n                    children: [\"Category : \", data.question_category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"left\",\n                    variant: \"body2\",\n                    color: \"#fff\",\n                    children: [\"Difficulty : \", data.question_difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"left\",\n                    variant: \"body2\",\n                    color: \"#fff\",\n                    children: [\"Score : \", data.score]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"left\",\n                    variant: \"body2\",\n                    color: \"#fff\",\n                    children: [\"Percentage : \", data.percentageValue]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      color: \"blue\"\n                    },\n                    textAlign: \"left\",\n                    variant: \"body2\",\n                    color: \"\",\n                    children: \"Click to view answers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          textAlign: \"center\",\n          variant: \"h5\",\n          color: \"text.secondary\",\n          children: \"NO USER FOUND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Admin, \"zRXZfoOMr/BB5/opNDRZkfKaETE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c2 = Admin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Admin\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Admin.jsx"],"names":["React","experimentalStyled","styled","Box","Paper","Grid","Card","CardContent","Button","CardActionArea","Container","useDispatch","useSelector","Typography","getQuestions","questionAnswers","useHistory","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","Admin","history","dispatch","viewAnswers","data","push","pathname","state","userData","userdatas","setUserDatas","useState","useEffect","userDetails","localStorage","getItem","Set","JSON","parse","xs","sm","md","length","map","index","name","question_category","question_difficulty","score","percentageValue"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { CardActionArea, Container } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Typography from '@mui/material/Typography';\nimport { getQuestions } from '../hooks/Axios';\nimport { questionAnswers } from '../Redux/action';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nconst Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nexport default function Admin() {\n    const history = useHistory();\nconst dispatch = useDispatch()\n   const viewAnswers = async (data)=>{\n    history.push({\n        pathname:\"/viewQuestion\",\n        state:{\n            userData:data\n        }\n    })\n   \n   }\n\n\n    const [userdatas, setUserDatas] = React.useState([])\n    React.useEffect(() => {\n        let userDetails = localStorage.getItem(\"userDetails\")\n        let data = [...new Set(JSON.parse(userDetails))]\n        setUserDatas(data)\n    }, [])\n    return (\n        <Container maxWidth={\"lg\"}>\n        <Box mt={5} spacing={2}>\n            <Grid container spacing={{ xs: 0 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n                {userdatas.length > 0 ? userdatas?.map((data, index) => (\n\n                    <Grid item xs={0} sm={4} md={4} key={index}>\n                        <Item>\n                            <Card  className=\"admin-card\">\n                                <CardActionArea onClick={() => {\n                                    viewAnswers(data)\n                                }}>\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\" color={\"#fff\"}>\n                                            {data.name}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" color={\"#fff\"}>\n                                            Category : {data.question_category}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" color={\"#fff\"}>\n                                            Difficulty : {data.question_difficulty}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" color={\"#fff\"}>\n                                            Score : {data.score}\n                                        </Typography>\n                                        <Typography textAlign={\"left\"} variant=\"body2\" color={\"#fff\"}>\n                                            Percentage : {data.percentageValue}\n                                        </Typography>\n                                        <Typography sx={{ color: \"blue\" }} textAlign={\"left\"} variant=\"body2\" color={\"\"}>\n                                            Click to view answers\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Item>\n                    </Grid>\n                )) :\n                    <Typography textAlign={\"center\"} variant=\"h5\" color=\"text.secondary\">\n                        NO USER FOUND\n                    </Typography>\n                }\n            </Grid>\n        </Box>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}