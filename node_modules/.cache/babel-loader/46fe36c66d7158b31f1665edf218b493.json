{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Final = () => {\n  _s();\n\n  const disptach = useDispatch();\n  const history = useHistory();\n  const {\n    score,\n    question_answers,\n    user_answers\n  } = useSelector(state => state);\n  useEffect(() => {\n    const userResult = {};\n  }, []);\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n\n  let percentageValue = (score / question_answers.length * 100).toFixed(0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 30,\n    children: [console.log(\"final answers : \", user_answers), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          fontWeight: \"bold\",\n          mb: 3,\n          children: [\"Final Score \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          fontWeight: \"bold\",\n          mb: 3,\n          children: [\"Your Percentage : \", percentageValue + \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBackToSettings,\n          variant: \"outlined\",\n          children: \"back to settings!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Final, \"eGNPgwpHvs2BAESyjxedzdrpJQ8=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Final;\nexport default Final;\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Typography","Box","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","userAnswers","Card","CardActions","CardContent","useEffect","Final","disptach","history","score","question_answers","user_answers","state","userResult","handleBackToSettings","push","percentageValue","length","toFixed","console","log","minWidth","justifyContent"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,WAA9C,QAAiE,iBAAjE;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAIA,QAAM;AAAEY,IAAAA,KAAF;AAAQC,IAAAA,gBAAR;AAAyBC,IAAAA;AAAzB,MAA0Cf,WAAW,CAAEgB,KAAD,IAAWA,KAAZ,CAA3D;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMQ,UAAU,GAAG,EAAnB;AAGG,GAJI,EAIH,EAJG,CAAT;;AAMA,QAAMC,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,QAAQ,CAACP,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAO,IAAAA,QAAQ,CAACR,iBAAiB,CAAC,CAAD,CAAlB,CAAR;AACAS,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,GAJD;;AAKA,MAAIC,eAAe,GAAG,CAAEP,KAAK,GAACC,gBAAgB,CAACO,MAAxB,GAAkC,GAAnC,EAAwCC,OAAxC,CAAgD,CAAhD,CAAtB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA,eACGC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BT,YAA/B,CADH,eAEC,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,8BACC,QAAC,WAAD;AAAA,gCACA,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,UAAU,EAAC,MAApC;AAA2C,UAAA,EAAE,EAAE,CAA/C;AAAA,qCACeZ,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,UAAU,EAAC,MAApC;AAA2C,UAAA,EAAE,EAAE,CAA/C;AAAA,2CACmBO,eAAe,GAAG,GADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eASC,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAACM,UAAAA,cAAc,EAAC;AAAhB,SAAjB;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAER,oBAAjB;AAAuC,UAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1CD;;GAAMR,K;UACaX,W,EACDE,U,EAIgCD,W;;;KAN5CU,K;AA4CN,eAAeA,KAAf","sourcesContent":["import { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport {handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n\n\n\n  const { score,question_answers,user_answers } = useSelector((state) => state);\n\n  useEffect(()=>{\n    const userResult = {\n      \n    }\n      },[])\n\n  const handleBackToSettings = () => {\n    disptach(handleScoreChnage(0));\n    disptach(handleLimitChange(0));\n    history.push(\"/\");\n  };\n  let percentageValue = ((score/question_answers.length) * 100).toFixed(0);\n\n  return (\n    <Box mt={30}>\n      {console.log(\"final answers : \",user_answers)}\n     <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n        Final Score {score}\n      </Typography>\n      <Typography variant=\"h3\" fontWeight=\"bold\" mb={3}>\n      Your Percentage : {percentageValue + \"%\"}\n      </Typography>\n      </CardContent>\n      <CardActions sx={{justifyContent:\"center\"}}>\n      <Button onClick={handleBackToSettings} variant=\"outlined\">\n        back to settings!\n      </Button>\n      </CardActions>\n    </Card>\n    </Box>\n   \n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}