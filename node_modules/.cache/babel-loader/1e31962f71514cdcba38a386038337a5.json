{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/viewQuestions.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, CircularProgress, Typography, useRadioGroup } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { decode } from \"html-entities\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\nimport { Container } from \"@mui/material\";\nimport { handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst answerResponse = {\n  \"answer_a\": \"Option A\",\n  \"answer_b\": \"Option B\",\n  \"answer_c\": \"Option C\",\n  \"answer_d\": \"Option D\",\n  \"answer_e\": \"Option E\",\n  \"answer_f\": \"Option F\"\n};\n\nconst ViewQuestion = () => {\n  _s();\n\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector(state => state);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  const [userData, setUserData] = useState({});\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false);\n  const [intialRender, setInitialRender] = useState(false);\n  useEffect(() => {\n    setUserData(history.location.state.userData);\n    console.log(\"looo\", userData);\n  }, []);\n\n  const handleListItemClick = number => {\n    setSelectedIndex(number);\n  };\n\n  useEffect(() => {\n    var _userData$question_an;\n\n    if ((_userData$question_an = userData.question_answers) !== null && _userData$question_an !== void 0 && _userData$question_an.length) {\n      const question = userData.question_answers[questionIndex];\n      console.log(\"question \", userData.question);\n      let answers = [];\n\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n        if (value) answers.push({\n          [key]: value\n        });\n      }\n\n      answers.splice(getRandomInt(question.answers.length), 0 // question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [userData.question_answers, questionIndex]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleClickAnswer = (name, next) => {\n    const question = question_answers[questionIndex];\n\n    if (next && questionIndex + 1 < question_answers.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        mb: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: \"\",\n          children: [\"Welcome \", userData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: userData.question_category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"Questions \", questionIndex + 1 + \"/\" + userData.question_answers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"question-card\",\n        sx: {\n          minHeight: \"80vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"card-question\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            mt: 5,\n            className: \"qust\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), options.map((data, id) => {\n            var _userData$user_answer;\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: [console.log(\"++++++\", data, id), /*#__PURE__*/_jsxDEV(List, {\n                component: \"nav\",\n                \"aria-label\": \"main mailbox folders\",\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  sx: {\n                    boxShadow: \"2\"\n                  },\n                  name: Object.keys(data),\n                  selected: ((_userData$user_answer = userData.user_answers.find(e => e.questionId == userData.question_answers[questionIndex].id)) === null || _userData$user_answer === void 0 ? void 0 : _userData$user_answer.selectedAnswer) == Object.keys(data)[0],\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: Object.values(data)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          sx: {\n            padding: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: [\"Score \", userData.score, \"/\", userData.question_answers.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"space-betwwen\",\n            children: userData.question_answers.length == questionIndex + 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                history.push(\"/admin\");\n              },\n              children: \"Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 71\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                setQuestionIndex(questionIndex + 1);\n              },\n              children: \"NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewQuestion, \"G9uwIkEywu9Q8HJM2M072+9wgSU=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useAxios];\n});\n\n_c = ViewQuestion;\nexport default ViewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewQuestion\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/viewQuestions.jsx"],"names":["React","Button","CircularProgress","Typography","useRadioGroup","Box","decode","useEffect","useState","useDispatch","useSelector","useHistory","Card","CardActions","CardContent","List","ListItemButton","ListItemIcon","ListItemText","useAxios","Container","handleScoreChnage","userAnswers","array","getRandomInt","max","Math","floor","random","answerResponse","ViewQuestion","question_category","question_difficulty","question_type","amount_of_question","score","name","question_answers","state","history","dispatch","apiUrl","response","loading","url","userData","setUserData","questionIndex","setQuestionIndex","options","setOptions","selectedIndex","setSelectedIndex","enableNext","setEnableNext","intialRender","setInitialRender","location","console","log","handleListItemClick","number","length","question","answers","key","value","Object","entries","push","splice","handleClickAnswer","next","minHeight","map","data","id","boxShadow","keys","user_answers","find","e","questionId","selectedAnswer","values","padding"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Button, CircularProgress, Typography, useRadioGroup } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { decode } from \"html-entities\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\nimport {Container} from \"@mui/material\";\nimport { handleScoreChnage,userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst answerResponse = {\n    \"answer_a\":\"Option A\",\n    \"answer_b\":\"Option B\",\n    \"answer_c\":\"Option C\",\n    \"answer_d\":\"Option D\",\n    \"answer_e\":\"Option E\",\n    \"answer_f\":\"Option F\",\n}\n\nconst ViewQuestion = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector((state) => state);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const[userData,setUserData] = useState({})\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false)\n  const [intialRender, setInitialRender] = useState(false)\n\n  useEffect(() => {\n    setUserData(history.location.state.userData)\n    console.log(\"looo\",userData);\n  }, [])\n\n  const handleListItemClick = (\n    number\n  ) => {\n    setSelectedIndex(number);\n  };\n  useEffect(() => {\n    if (userData.question_answers?.length) {\n      const question = userData.question_answers[questionIndex];\n      console.log(\"question \", userData.question)\n      let answers = []\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n\n        if (value)\n          answers.push({\n            [key]: value\n          })\n      }\n      answers.splice(\n        getRandomInt(question.answers.length),\n        0,\n        // question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [userData.question_answers, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (name, next) => {\n    const question = question_answers[questionIndex];\n    if (next && questionIndex + 1 < question_answers.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  return (\n    <><Container maxWidth={\"xl\"} >\n    <Box mt={2} mb={2} display={\"flex\"} justifyContent={\"space-between\"}>\n        <Typography variant=\"h4\" className=\"\">Welcome {userData.name}</Typography>\n        <Typography variant=\"h4\">{userData.question_category}</Typography>\n        <Typography variant=\"h4\">Questions {questionIndex + 1 + \"/\" + userData.question_answers.length}</Typography>\n      </Box>\n      </Container>\n      <Container  maxWidth={\"md\"}>\n      <Card  className=\"question-card\"  sx={{minHeight:\"80vh\"}}>\n        <CardContent className=\"card-question\">\n          <Typography mt={5} className=\"qust\">\n          </Typography>\n          {options.map((data, id) => (\n           \n            <Box mt={2} key={id}>\n              { console.log(\"++++++\",data,id)}\n              <List  component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton sx={{boxShadow:\"2\"}}name={Object.keys(data)}\n                  selected={ userData.user_answers.find((e)=>e.questionId == userData.question_answers[questionIndex].id)?.selectedAnswer == Object.keys(data)[0] }\n                >\n                  <ListItemText primary={Object.values(data)} />\n                </ListItemButton>\n              </List>\n            \n            </Box>\n          ))}\n      \n         \n        </CardContent>\n        <CardActions sx={{padding:\"30px\"}} >\n        <Typography variant=\"h3\">Score {userData.score}/{userData.question_answers.length}</Typography>\n            <Box display={\"flex\"} width={\"100%\"} justifyContent={\"space-betwwen\"}>\n             \n             {userData.question_answers.length == questionIndex+1 ?   <Button variant=\"contained\" onClick={() => {history.push(\"/admin\")}}>Back to Dashboard</Button> :\n              <Button variant=\"contained\" onClick={() => {setQuestionIndex(questionIndex+1)}}>NEXT</Button>\n             }\n            </Box>\n           \n          </CardActions>\n      </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ViewQuestion;\n"]},"metadata":{},"sourceType":"module"}