{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik } from \"formik\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useFetchData, { getQuestions } from \"../hooks/Axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Setting = () => {\n  _s();\n\n  const {\n    response,\n    loading,\n    error\n  } = useFetchData({\n    url: \"/api_category.php\"\n  });\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  const {\n    question_category,\n    question_difficulty,\n    question_limit\n  } = useSelector(state => state);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mt: 20,\n      color: \"red\",\n      children: \"Something went wrong!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  const categoryOptions = [{\n    id: \"Random\",\n    name: \"Random\"\n  }, {\n    id: \"Linux\",\n    name: \"Linux\"\n  }, {\n    id: \"DevOps\",\n    name: \"DevOps\"\n  }, {\n    id: \"Networking\",\n    name: \"Networking\"\n  }, {\n    id: \"Programming (PHP, JS, Pythong and etc.)\",\n    name: \"Programming (PHP, JS, Pythong and etc.)\"\n  }, {\n    id: \"Cloud\",\n    name: \"Cloud\"\n  }, {\n    id: \"Docker\",\n    name: \"Docker\"\n  }];\n  const difficultyOption = [{\n    id: \"easy\",\n    name: \"Easy\"\n  }, {\n    id: \"medium\",\n    name: \"Medium\"\n  }, {\n    id: \"hard\",\n    name: \"Hard\"\n  }];\n  const typeOptions = [{\n    id: \"5\",\n    name: \"5\"\n  }, {\n    id: \"10\",\n    name: \"10\"\n  }, {\n    id: \"15\",\n    name: \"15\"\n  }, {\n    id: \"20\",\n    name: \"20\"\n  }];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(\"event : \", question_category);\n    const url = `https://quizapi.io/api/v1/questions?${question_category ? \"category=\" + question_category : \"\"}${question_difficulty ? \"&difficulty=\" + question_difficulty : \"\"}${question_limit ? \"&limit=\" + question_limit : \"\"}`;\n    console.log(\"event : \", url);\n    const result = await getQuestions(url);\n    console.log(\"result\", res); // history.push(\"/question\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextFieldCom, {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: categoryOptions,\n      label: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: difficultyOption,\n      label: \"Difficulty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: typeOptions,\n      label: \"Limit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Setting, \"cbc4pGm2ewcUS/ygrHpuV4ip3rM=\", false, function () {\n  return [useFetchData, useHistory, useSelector];\n});\n\n_c = Setting;\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx"],"names":["React","useState","useHistory","Button","CircularProgress","TextField","Typography","Box","Formik","SelectField","TextFieldCom","useDispatch","useSelector","useFetchData","getQuestions","Setting","response","loading","error","url","name","setName","history","question_category","question_difficulty","question_limit","state","categoryOptions","id","difficultyOption","typeOptions","handleSubmit","event","preventDefault","console","log","result","res"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik } from \"formik\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useFetchData, { getQuestions } from \"../hooks/Axios\";\n\nconst Setting = () => {\n  const { response, loading, error } = useFetchData({ url: \"/api_category.php\" });\nconst [name,setName] = useState(\"\")\n  const history = useHistory();\n  const { question_category,question_difficulty,question_limit } = useSelector((state) => state);\n\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong!!\n      </Typography>\n    );\n  }\n\n  const categoryOptions = [\n    { id: \"Random\", name: \"Random\" },\n    { id: \"Linux\", name: \"Linux\" },\n    { id: \"DevOps\", name: \"DevOps\" },\n    { id: \"Networking\", name: \"Networking\" },\n    { id: \"Programming (PHP, JS, Pythong and etc.)\", name: \"Programming (PHP, JS, Pythong and etc.)\" },\n    { id: \"Cloud\", name: \"Cloud\" },\n    { id: \"Docker\", name: \"Docker\" },\n  ]\n\n\n\n  const difficultyOption = [\n    { id: \"easy\", name: \"Easy\" },\n    { id: \"medium\", name: \"Medium\" },\n    { id: \"hard\", name: \"Hard\" },\n  ];\n\n  const typeOptions = [\n    { id: \"5\", name: \"5\" },\n    { id: \"10\", name: \"10\" },\n    { id: \"15\", name: \"15\" },\n    { id: \"20\", name: \"20\" },\n  ];\n\n  const handleSubmit =async (event) => {\n    event.preventDefault();\n    console.log(\"event : \", question_category);\n    const url = `https://quizapi.io/api/v1/questions?${question_category ? \"category=\"+question_category : \"\"}${question_difficulty ? \"&difficulty=\"+question_difficulty : \"\"}${question_limit ? \"&limit=\"+question_limit : \"\"}`\n    console.log(\"event : \", url);\n\n    const result = await getQuestions(url)\n    console.log(\"result\",res)\n    // history.push(\"/question\");\n  };\n\n  \n  return (\n  \n        <form onSubmit={handleSubmit}>\n          <TextFieldCom >Name</TextFieldCom>\n          <SelectField options={categoryOptions} label=\"Category\" />\n          <SelectField options={difficultyOption} label=\"Difficulty\" />\n          <SelectField options={typeOptions} label=\"Limit\" />\n\n          <Box mt={3} width=\"100%\">\n            <Button fullWidth variant=\"contained\" type=\"submit\">\n              Get Started\n            </Button>\n          </Box>\n        </form>\n  \n  );\n};\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}