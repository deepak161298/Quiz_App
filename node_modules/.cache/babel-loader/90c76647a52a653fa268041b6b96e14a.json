{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Final = () => {\n  _s();\n\n  const disptach = useDispatch();\n  const history = useHistory();\n  const {\n    scoreValue,\n    pecentageValue\n  } = useParams();\n  const {\n    question_difficulty,\n    name,\n    question_limit,\n    question_answers,\n    question_category,\n    score,\n    user_answers\n  } = useSelector(state => state);\n  let percentageValue = (score / question_answers.length * 100).toFixed(0);\n  useEffect(() => {\n    if (name) {\n      const userResult = {\n        name: name,\n        question_difficulty: question_difficulty,\n        question_limit: question_limit,\n        question_category,\n        score: score,\n        user_answers: user_answers,\n        percentageValue: percentageValue,\n        question_answers: question_answers\n      };\n      let getUserDetails = localStorage.getItem(\"userDetails\");\n\n      if (!getUserDetails) {\n        var userArray = [];\n        localStorage.setItem(\"userDetails\", JSON.stringify(userArray));\n      } else {\n        console.log(\"data\", localStorage.getItem(\"userDetails\"));\n\n        if (localStorage.getItem(\"userDetails\")) {\n          localStorage.setItem(\"userDetails\", JSON.stringify([...JSON.parse(localStorage.getItem(\"userDetails\")), userResult]));\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"lex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        boxShadow: 5\n      },\n      children: [console.log(\"final answers : \", user_answers), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 275\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            fontWeight: \"bold\",\n            mb: 2,\n            children: \"QUIZ RESULT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: \"bold\",\n            mb: 1,\n            children: [\"Final Score : \", score, \"/\", question_answers.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: \"bold\",\n            mb: 1,\n            children: [\"Your Percentage : \", percentageValue + \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          sx: {\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => history.push(\"/\"),\n            variant: \"outlined\",\n            children: \"back to settings!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Final, \"TLKlTQ02V06UaJr95/sBI3V8ElY=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector];\n});\n\n_c = Final;\nexport default Final;\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Container","Typography","Box","useParams","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","userAnswers","Card","CardActions","CardContent","useEffect","Final","disptach","history","scoreValue","pecentageValue","question_difficulty","name","question_limit","question_answers","question_category","score","user_answers","state","percentageValue","length","toFixed","userResult","getUserDetails","localStorage","getItem","userArray","setItem","JSON","stringify","console","log","parse","boxShadow","minWidth","justifyContent","push"],"mappings":"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","sourcesContent":["import { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\n\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\nconst {scoreValue,pecentageValue} = useParams()\n  const { question_difficulty, name, question_limit, question_answers, question_category, score, user_answers, } = useSelector((state) => state);\n  let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n  useEffect(() => {\n    if(name){\n    const userResult = {\n      name: name,\n      question_difficulty: question_difficulty,\n      question_limit: question_limit,\n      question_category,\n      score: score,\n      user_answers: user_answers,\n      percentageValue: percentageValue,\n      question_answers: question_answers\n    }\n\n    let getUserDetails = localStorage.getItem(\"userDetails\")\n\n    if (!getUserDetails) {\n      var userArray = []\n      localStorage.setItem(\"userDetails\", JSON.stringify(userArray))\n    } else {\n      console.log(\"data\", localStorage.getItem(\"userDetails\"))\n      if (localStorage.getItem(\"userDetails\")) {\n        localStorage.setItem(\"userDetails\", JSON.stringify([...JSON.parse(localStorage.getItem(\"userDetails\")), userResult]))\n      }\n    }\n  }\n  }, [])\n\n \n\n\n  return (\n    <Box display={\"lex\"} justifyContent={\"center\"} alignItems={\"center\"} height={\"100vh\"}>\n      <Container maxWidth={\"sm\"} sx={{ boxShadow: 5 }}>\n        {console.log(\"final answers : \", user_answers)}\n        <Card sx={{ minWidth: 275 }}>\n          <CardContent>\n            <Typography variant=\"h4\" fontWeight=\"bold\" mb={2}>\n             QUIZ RESULT\n            </Typography>\n            <Typography variant=\"h5\" fontWeight=\"bold\" mb={1}>\n              Final Score : {score}/{question_answers.length}\n            </Typography>\n            <Typography variant=\"h5\" fontWeight=\"bold\" mb={1}>\n              Your Percentage : {percentageValue + \"%\"}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ justifyContent: \"center\" }}>\n            <Button onClick={()=>history.push(\"/\")} variant=\"outlined\">\n              back to settings!\n            </Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}