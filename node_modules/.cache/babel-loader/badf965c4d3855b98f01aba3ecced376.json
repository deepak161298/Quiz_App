{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport Axios from \"../hooks/Axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Setting = () => {\n  _s();\n\n  const {\n    response,\n    loading,\n    error\n  } = Axios({\n    url: \"/api_category.php\"\n  });\n  const history = useHistory();\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    category: Yup.string(),\n    difficulty: Yup.string(),\n    limit: Yup.number()\n  });\n\n  const handleSubmit = values => {\n    console.log(\"+++++++++++\"); // Handle the form submission here\n\n    console.log(values); // You can access the form data here and send it to the server or do any processing.\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mt: 20,\n      color: \"red\",\n      children: \"Something went wrong!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  const categoryOptions = [{\n    id: \"Linux\",\n    name: \"Linux\"\n  }, {\n    id: \"DevOps\",\n    name: \"DevOps\"\n  }, {\n    id: \"Networking\",\n    name: \"Networking\"\n  }, {\n    id: \"Programming (PHP, JS, Pythong and etc.)\",\n    name: \"Programming (PHP, JS, Pythong and etc.)\"\n  }, {\n    id: \"Cloud\",\n    name: \"Cloud\"\n  }, {\n    id: \"Docker\",\n    name: \"Docker\"\n  }];\n  const difficultyOption = [{\n    id: \"easy\",\n    name: \"Easy\"\n  }, {\n    id: \"medium\",\n    name: \"Medium\"\n  }, {\n    id: \"hard\",\n    name: \"Hard\"\n  }];\n  const typeOptions = [{\n    id: \"5\",\n    name: \"5\"\n  }, {\n    id: \"10\",\n    name: \"10\"\n  }, {\n    id: \"15\",\n    name: \"15\"\n  }, {\n    id: \"20\",\n    name: \"20\"\n  }]; // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   console.log(\"event : \", event);\n  //   // history.push(\"/question\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      category: '',\n      difficulty: '',\n      limit: 0\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: _ref => {\n      let {\n        touched,\n        errors\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              width: \"100%\"\n            },\n            required: true,\n            id: \"standard\",\n            label: \"Name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          id: \"category\",\n          name: \"category\",\n          options: categoryOptions,\n          label: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          id: \"difficulty\",\n          name: \"difficulty\",\n          options: difficultyOption,\n          label: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          id: \"limit\",\n          name: \"limit\",\n          options: typeOptions,\n          label: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Setting, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Setting;\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx"],"names":["React","useHistory","Form","Formik","Yup","Button","CircularProgress","TextField","Typography","Box","SelectField","TextFieldCom","Axios","Setting","response","loading","error","url","history","validationSchema","object","shape","name","string","required","category","difficulty","limit","number","handleSubmit","values","console","log","categoryOptions","id","difficultyOption","typeOptions","touched","errors","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\n\nimport Axios from \"../hooks/Axios\";\n\nconst Setting = () => {\n  const { response, loading, error } = Axios({ url: \"/api_category.php\" });\n\n  const history = useHistory();\n\n  const validationSchema = Yup.object().shape({\n    name:Yup.string().required(\"Name is required\"),\n    category: Yup.string(),\n    difficulty: Yup.string(),\n    limit: Yup.number(),\n  });\n  \n \n    const handleSubmit = (values) => {\n      console.log(\"+++++++++++\")\n      // Handle the form submission here\n      console.log(values); // You can access the form data here and send it to the server or do any processing.\n    };\n  \n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong!!\n      </Typography>\n    );\n  }\n\n  const categoryOptions = [\n    { id: \"Linux\", name: \"Linux\" },\n    { id: \"DevOps\", name: \"DevOps\" },\n    { id: \"Networking\", name: \"Networking\" },\n    { id: \"Programming (PHP, JS, Pythong and etc.)\", name: \"Programming (PHP, JS, Pythong and etc.)\" },\n    { id: \"Cloud\", name: \"Cloud\" },\n    { id: \"Docker\", name: \"Docker\" },\n  ]\n\n\n\n  const difficultyOption = [\n    { id: \"easy\", name: \"Easy\" },\n    { id: \"medium\", name: \"Medium\" },\n    { id: \"hard\", name: \"Hard\" },\n  ];\n\n  const typeOptions = [\n    { id: \"5\", name: \"5\" },\n    { id: \"10\", name: \"10\" },\n    { id: \"15\", name: \"15\" },\n    { id: \"20\", name: \"20\" },\n  ];\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   console.log(\"event : \", event);\n  //   // history.push(\"/question\");\n  // };\n\n  return (\n    <Formik\n      initialValues={{ name: '', category: '', difficulty: '',limit:0 }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ touched, errors }) => (\n        <Form >\n          <Box mt={3} width=\"100%\">\n            <TextField\n              sx={{ width: \"100%\" }}\n              required\n              id=\"standard\"\n              label=\"Name\"\n              name=\"name\"\n            />\n          </Box>\n          <SelectField id=\"category\" name=\"category\" options={categoryOptions} label=\"category\" />\n          <SelectField id=\"difficulty\" name=\"difficulty\" options={difficultyOption} label=\"Difficulty\" />\n          <SelectField id=\"limit\" name=\"limit\" options={typeOptions} label=\"Type\" />\n\n          <Box mt={3} width=\"100%\">\n            <Button fullWidth variant=\"contained\" type=\"submit\">\n              Get Started\n            </Button>\n          </Box>  \n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}