{"ast":null,"code":"import{Button,Container,Typography}from\"@mui/material\";import{Box}from\"@mui/system\";import{useParams}from\"react-router-dom/cjs/react-router-dom.min\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router\";import{LinearProgress}from'@mui/material';import{handleLimitChange,handleScoreChnage,userAnswers}from\"../Redux/action\";import Card from'@mui/material/Card';import CardActions from'@mui/material/CardActions';import CardContent from'@mui/material/CardContent';import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var queryString=window.location.search;var urlParams=new URLSearchParams(queryString);var Final=function Final(){var disptach=useDispatch();var history=useHistory();var _useSelector=useSelector(function(state){return state;}),question_difficulty=_useSelector.question_difficulty,name=_useSelector.name,question_limit=_useSelector.question_limit,question_answers=_useSelector.question_answers,question_category=_useSelector.question_category,score=_useSelector.score,user_answers=_useSelector.user_answers;// let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\nuseEffect(function(){if(urlParams.get(\"limit\").length==0){history.push(\"/\");}},[]);return/*#__PURE__*/_jsx(Box,{display:\"lex\",justifyContent:\"center\",alignItems:\"center\",height:\"100vh\",children:/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",sx:{boxShadow:5},children:/*#__PURE__*/_jsxs(Card,{sx:{minWidth:\"100%\",minHeight:\"50vh\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",flexDirection:\"column\",borderRadius:\"24px\"},children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:\"result\",fontWeight:\"bold\",mb:2,children:\"QUIZ RESULT\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",className:\"result\",fontWeight:\"bold\",mb:1,children:[\"Final Score : \",urlParams.get(\"scoreValue\"),\"/\",urlParams.get(\"limit\")]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",className:\"result\",fontWeight:\"bold\",mb:1,children:[\"Your Percentage : \",urlParams.get(\"pecentageValue\")+\"%\"]})]}),/*#__PURE__*/_jsx(CardActions,{sx:{justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return history.push(\"/\");},children:\"back to settings!\"})})]})})});};export default Final;","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Container","Typography","Box","useParams","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","userAnswers","Card","CardActions","CardContent","useEffect","queryString","window","location","search","urlParams","URLSearchParams","Final","disptach","history","state","question_difficulty","name","question_limit","question_answers","question_category","score","user_answers","get","length","push","boxShadow","minWidth","minHeight","display","alignItems","justifyContent","flexDirection","borderRadius"],"mappings":"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","sourcesContent":["import { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n\n  const { question_difficulty, name, question_limit, question_answers, question_category, score, user_answers, } = useSelector((state) => state);\n  // let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n  useEffect(() => {\n   \n\n\n  if(urlParams.get(\"limit\").length == 0){\n    history.push(\"/\")\n  }\n  }, [])\n\n \n\n\n  return (\n    <Box display={\"lex\"} justifyContent={\"center\"} alignItems={\"center\"} height={\"100vh\"}>\n      <Container maxWidth={\"sm\"} sx={{ boxShadow: 5 }}>\n      \n        <Card sx={{ minWidth: \"100%\",minHeight:\"50vh\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",flexDirection:\"column\",borderRadius:\"24px\" }}>\n          <CardContent>\n            <Typography variant=\"h4\" className=\"result\" fontWeight=\"bold\" mb={2}>\n             QUIZ RESULT\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Final Score : {urlParams.get(\"scoreValue\")}/{urlParams.get(\"limit\")}\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Your Percentage : {urlParams.get(\"pecentageValue\") + \"%\"}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ justifyContent: \"center\" }}>\n            <Button variant=\"contained\" onClick={()=>history.push(\"/\")} >\n              back to settings!\n            </Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}