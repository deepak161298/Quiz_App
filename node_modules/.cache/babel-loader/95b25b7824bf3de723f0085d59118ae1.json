{"ast":null,"code":"import _defineProperty from\"/home/deepak/Videos/quiz-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/home/deepak/Videos/quiz-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{Button,CircularProgress,Typography,useRadioGroup}from\"@mui/material\";import{Box}from\"@mui/system\";import{decode}from\"html-entities\";import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router\";import Card from'@mui/material/Card';import CardActions from'@mui/material/CardActions';import CardContent from'@mui/material/CardContent';import List from'@mui/material/List';import ListItemButton from'@mui/material/ListItemButton';import ListItemIcon from'@mui/material/ListItemIcon';import ListItemText from'@mui/material/ListItemText';import useAxios from\"../hooks/Axios\";import{Container}from\"@mui/material\";import{handleScoreChnage,userAnswers}from\"../Redux/action\";import{array}from\"yup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var getRandomInt=function getRandomInt(max){return Math.floor(Math.random()*Math.floor(max));};var answerResponse={\"answer_a\":\"Option A\",\"answer_b\":\"Option B\",\"answer_c\":\"Option C\",\"answer_d\":\"Option D\",\"answer_e\":\"Option E\",\"answer_f\":\"Option F\"};var ViewQuestion=function ViewQuestion(){var _useSelector=useSelector(function(state){return state;}),question_category=_useSelector.question_category,question_difficulty=_useSelector.question_difficulty,question_type=_useSelector.question_type,amount_of_question=_useSelector.amount_of_question,score=_useSelector.score,name=_useSelector.name,question_answers=_useSelector.question_answers;var history=useHistory();var dispatch=useDispatch();var apiUrl=\"/api.php?amount=\".concat(amount_of_question);var _useAxios=useAxios({url:apiUrl}),response=_useAxios.response,loading=_useAxios.loading;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),questionIndex=_useState4[0],setQuestionIndex=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),options=_useState6[0],setOptions=_useState6[1];var _React$useState=React.useState(1),_React$useState2=_slicedToArray(_React$useState,2),selectedIndex=_React$useState2[0],setSelectedIndex=_React$useState2[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),enableNext=_useState8[0],setEnableNext=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),intialRender=_useState10[0],setInitialRender=_useState10[1];useEffect(function(){setUserData(history.location.state.userData);console.log(\"looo\",userData);},[]);var handleListItemClick=function handleListItemClick(number){setSelectedIndex(number);};useEffect(function(){var _userData$question_an;if((_userData$question_an=userData.question_answers)!==null&&_userData$question_an!==void 0&&_userData$question_an.length){var question=userData.question_answers[questionIndex];console.log(\"question \",userData.question);var answers=[];for(var _i=0,_Object$entries=Object.entries(question.answers);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];console.log(\"values\",value);if(value)answers.push(_defineProperty({},key,value));}answers.splice(getRandomInt(question.answers.length),0// question.correct_answer\n);setOptions(answers);}},[userData.question_answers,questionIndex]);if(loading){return/*#__PURE__*/_jsx(Box,{mt:20,children:/*#__PURE__*/_jsx(CircularProgress,{})});}var handleClickAnswer=function handleClickAnswer(name,next){var question=question_answers[questionIndex];if(next&&questionIndex+1<question_answers.length){setQuestionIndex(questionIndex+1);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Box,{mt:2,mb:2,display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",className:\"\",children:[\"Welcome \",userData.name]}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:userData.question_category}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[\"Questions \",questionIndex+1+\"/\"+userData.question_answers.length]})]})}),/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Card,{className:\"question-card\",sx:{minHeight:\"80vh\"},children:[/*#__PURE__*/_jsxs(CardContent,{className:\"card-question\",children:[/*#__PURE__*/_jsx(Typography,{mt:5,className:\"qust\"}),options.map(function(data,id){var _userData$user_answer;return/*#__PURE__*/_jsxs(Box,{mt:2,children:[console.log(\"++++++\",data,id),/*#__PURE__*/_jsx(List,{component:\"nav\",\"aria-label\":\"main mailbox folders\",children:/*#__PURE__*/_jsx(ListItemButton,{sx:{boxShadow:\"2\"},name:Object.keys(data),selected:((_userData$user_answer=userData.user_answers.find(function(e){return e.questionId==userData.question_answers[questionIndex].id;}))===null||_userData$user_answer===void 0?void 0:_userData$user_answer.selectedAnswer)==Object.keys(data)[0],children:/*#__PURE__*/_jsx(ListItemText,{primary:Object.values(data)})})})]},id);})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h3\",children:[\"Score \",userData.score,\"/\",userData.question_answers.length]}),/*#__PURE__*/_jsx(CardActions,{sx:{padding:\"30px\"},children:/*#__PURE__*/_jsx(Box,{display:\"flex\",width:\"100%\",justifyContent:\"flex-end\",children:userData.question_answers.length==questionIndex+1?/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){history.push(\"/admin\");},children:\"Back to Dashboard\"}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){setQuestionIndex(questionIndex+1);},children:\"NEXT\"})})})]})})]});};export default ViewQuestion;","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/viewQuestions.jsx"],"names":["React","Button","CircularProgress","Typography","useRadioGroup","Box","decode","useEffect","useState","useDispatch","useSelector","useHistory","Card","CardActions","CardContent","List","ListItemButton","ListItemIcon","ListItemText","useAxios","Container","handleScoreChnage","userAnswers","array","getRandomInt","max","Math","floor","random","answerResponse","ViewQuestion","state","question_category","question_difficulty","question_type","amount_of_question","score","name","question_answers","history","dispatch","apiUrl","url","response","loading","userData","setUserData","questionIndex","setQuestionIndex","options","setOptions","selectedIndex","setSelectedIndex","enableNext","setEnableNext","intialRender","setInitialRender","location","console","log","handleListItemClick","number","length","question","answers","Object","entries","key","value","push","splice","handleClickAnswer","next","minHeight","map","data","id","boxShadow","keys","user_answers","find","e","questionId","selectedAnswer","values","padding"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { Button, CircularProgress, Typography, useRadioGroup } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { decode } from \"html-entities\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport useAxios from \"../hooks/Axios\";\nimport {Container} from \"@mui/material\";\nimport { handleScoreChnage,userAnswers } from \"../Redux/action\";\nimport { array } from \"yup\";\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst answerResponse = {\n    \"answer_a\":\"Option A\",\n    \"answer_b\":\"Option B\",\n    \"answer_c\":\"Option C\",\n    \"answer_d\":\"Option D\",\n    \"answer_e\":\"Option E\",\n    \"answer_f\":\"Option F\",\n}\n\nconst ViewQuestion = () => {\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score,\n    name,\n    question_answers\n  } = useSelector((state) => state);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  const[userData,setUserData] = useState({})\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [enableNext, setEnableNext] = useState(false)\n  const [intialRender, setInitialRender] = useState(false)\n\n  useEffect(() => {\n    setUserData(history.location.state.userData)\n    console.log(\"looo\",userData);\n  }, [])\n\n  const handleListItemClick = (\n    number\n  ) => {\n    setSelectedIndex(number);\n  };\n  useEffect(() => {\n    if (userData.question_answers?.length) {\n      const question = userData.question_answers[questionIndex];\n      console.log(\"question \", userData.question)\n      let answers = []\n      for (const [key, value] of Object.entries(question.answers)) {\n        console.log(\"values\", value);\n\n        if (value)\n          answers.push({\n            [key]: value\n          })\n      }\n      answers.splice(\n        getRandomInt(question.answers.length),\n        0,\n        // question.correct_answer\n      );\n      setOptions(answers);\n    }\n  }, [userData.question_answers, questionIndex]);\n\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const handleClickAnswer = (name, next) => {\n    const question = question_answers[questionIndex];\n    if (next && questionIndex + 1 < question_answers.length) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  return (\n    <><Container maxWidth={\"xl\"} >\n    <Box mt={2} mb={2} display={\"flex\"} justifyContent={\"space-between\"}>\n        <Typography variant=\"h4\" className=\"\">Welcome {userData.name}</Typography>\n        <Typography variant=\"h4\">{userData.question_category}</Typography>\n        <Typography variant=\"h4\">Questions {questionIndex + 1 + \"/\" + userData.question_answers.length}</Typography>\n      </Box>\n      </Container>\n      <Container  maxWidth={\"md\"}>\n      <Card  className=\"question-card\"  sx={{minHeight:\"80vh\"}}>\n        <CardContent className=\"card-question\">\n          <Typography mt={5} className=\"qust\">\n          </Typography>\n          {options.map((data, id) => (\n           \n            <Box mt={2} key={id}>\n              { console.log(\"++++++\",data,id)}\n              <List  component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItemButton sx={{boxShadow:\"2\"}}name={Object.keys(data)}\n                  selected={ userData.user_answers.find((e)=>e.questionId == userData.question_answers[questionIndex].id)?.selectedAnswer == Object.keys(data)[0] }\n                >\n                  <ListItemText primary={Object.values(data)} />\n                </ListItemButton>\n              </List>\n            \n            </Box>\n          ))}\n      \n         \n        </CardContent>\n        <Typography variant=\"h3\">Score {userData.score}/{userData.question_answers.length}</Typography>\n        <CardActions sx={{padding:\"30px\"}} >\n      \n            <Box display={\"flex\"} width={\"100%\"} justifyContent={\"flex-end\"}>\n             {userData.question_answers.length == questionIndex+1 ?   <Button variant=\"contained\" onClick={() => {history.push(\"/admin\")}}>Back to Dashboard</Button> :\n              <Button variant=\"contained\" onClick={() => {setQuestionIndex(questionIndex+1)}}>NEXT</Button>\n             }\n            </Box>\n           \n          </CardActions>\n      </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ViewQuestion;\n"]},"metadata":{},"sourceType":"module"}