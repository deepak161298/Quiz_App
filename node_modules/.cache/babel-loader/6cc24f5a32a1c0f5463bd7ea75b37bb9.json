{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Final.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\n\nconst Final = () => {\n  _s();\n\n  const disptach = useDispatch();\n  const history = useHistory();\n  const {\n    question_difficulty,\n    name,\n    question_limit,\n    question_answers,\n    question_category,\n    score,\n    user_answers\n  } = useSelector(state => state); // let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n\n  useEffect(() => {\n    console.log(\"param value\", urlParams.get(\"scoreValue\"));\n\n    if (urlParams.get(\"limit\").length == 0) {\n      history.push(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"lex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        boxShadow: 5\n      },\n      children: [console.log(\"final answers : \", user_answers), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: \"100%\",\n          minHeight: \"50vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          borderRadius: \"24px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: \"result\",\n            fontWeight: \"bold\",\n            mb: 2,\n            children: \"QUIZ RESULT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"result\",\n            fontWeight: \"bold\",\n            mb: 1,\n            children: [\"Final Score : \", urlParams.get(\"scoreValue\"), \"/\", urlParams.get(\"limit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"result\",\n            fontWeight: \"bold\",\n            mb: 1,\n            children: [\"Your Percentage : \", urlParams.get(\"pecentageValue\") + \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          sx: {\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => history.push(\"/\"),\n            variant: \"outlined\",\n            children: \"back to settings!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Final, \"aWRYwhQMYTxKNzOncFG6Ahsgygs=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Final;\nexport default Final;\n\nvar _c;\n\n$RefreshReg$(_c, \"Final\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Final.jsx"],"names":["Button","Container","Typography","Box","useParams","useDispatch","useSelector","useHistory","LinearProgress","handleLimitChange","handleScoreChnage","userAnswers","Card","CardActions","CardContent","useEffect","queryString","window","location","search","urlParams","URLSearchParams","Final","disptach","history","question_difficulty","name","question_limit","question_answers","question_category","score","user_answers","state","console","log","get","length","push","boxShadow","minWidth","minHeight","display","alignItems","justifyContent","flexDirection","borderRadius"],"mappings":"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","sourcesContent":["import { Button, Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { LinearProgress } from '@mui/material';\nimport { handleLimitChange, handleScoreChnage, userAnswers } from \"../Redux/action\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useEffect } from \"react\";\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\n\nconst Final = () => {\n  const disptach = useDispatch();\n  const history = useHistory();\n\n  const { question_difficulty, name, question_limit, question_answers, question_category, score, user_answers, } = useSelector((state) => state);\n  // let percentageValue = ((score / question_answers.length) * 100).toFixed(0);\n  useEffect(() => {\n   \n\n\n  console.log(\"param value\",urlParams.get(\"scoreValue\"))\n  if(urlParams.get(\"limit\").length == 0){\n    history.push(\"/\")\n  }\n  }, [])\n\n \n\n\n  return (\n    <Box display={\"lex\"} justifyContent={\"center\"} alignItems={\"center\"} height={\"100vh\"}>\n      <Container maxWidth={\"sm\"} sx={{ boxShadow: 5 }}>\n        {console.log(\"final answers : \", user_answers)}\n        <Card sx={{ minWidth: \"100%\",minHeight:\"50vh\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",flexDirection:\"column\",borderRadius:\"24px\" }}>\n          <CardContent>\n            <Typography variant=\"h4\" className=\"result\" fontWeight=\"bold\" mb={2}>\n             QUIZ RESULT\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Final Score : {urlParams.get(\"scoreValue\")}/{urlParams.get(\"limit\")}\n            </Typography>\n            <Typography variant=\"h5\" className=\"result\" fontWeight=\"bold\" mb={1}>\n              Your Percentage : {urlParams.get(\"pecentageValue\") + \"%\"}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ justifyContent: \"center\" }}>\n            <Button variant=\"contained\" onClick={()=>history.push(\"/\")} variant=\"outlined\">\n              back to settings!\n            </Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Final;\n"]},"metadata":{},"sourceType":"module"}