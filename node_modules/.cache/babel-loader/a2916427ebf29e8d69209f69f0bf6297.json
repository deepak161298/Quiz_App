{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik } from \"formik\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useFetchData, { getQuestions } from \"../hooks/Axios\";\nimport { handleCategoryChange, handleDifficultyChange, handleLimitChange, handleNameChange, handleScoreChnage, questionAnswers } from \"../Redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryOptions = [{\n  id: \"Random\",\n  name: \"Random\"\n}, {\n  id: \"Linux\",\n  name: \"Linux\"\n}, {\n  id: \"DevOps\",\n  name: \"DevOps\"\n}, {\n  id: \"Networking\",\n  name: \"Networking\"\n}, {\n  id: \"Cloud\",\n  name: \"Cloud\"\n}, {\n  id: \"Docker\",\n  name: \"Docker\"\n}];\nconst difficultyOption = [{\n  id: \"easy\",\n  name: \"Easy\"\n}, {\n  id: \"medium\",\n  name: \"Medium\"\n}, {\n  id: \"hard\",\n  name: \"Hard\"\n}];\nconst typeOptions = [{\n  id: \"5\",\n  name: \"5\"\n}, {\n  id: \"10\",\n  name: \"10\"\n}, {\n  id: \"15\",\n  name: \"15\"\n}, {\n  id: \"20\",\n  name: \"20\"\n}];\nconst errObject = {\n  401: \"Unauthenticated\",\n  404: \"No questions found\",\n  429: \"Too Many Requests\"\n};\n\nconst Setting = () => {\n  _s();\n\n  const {\n    response,\n    loading,\n    error\n  } = useFetchData({\n    url: \"/api_category.php\"\n  });\n  const history = useHistory();\n  const {\n    question_category,\n    question_difficulty,\n    question_limit,\n    name\n  } = useSelector(state => state);\n  useEffect(() => {\n    clearState();\n  }, []);\n  const dispatch = useDispatch();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  function clearState() {\n    dispatch(handleScoreChnage(0));\n    dispatch(handleCategoryChange(\"\"));\n    dispatch(handleDifficultyChange(\"\"));\n    dispatch(handleLimitChange(\"\"));\n    dispatch(handleNameChange(\"\"));\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mt: 20,\n      color: \"red\",\n      children: \"Something went wrong!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(\"name : \", name);\n    const url = `https://quizapi.io/api/v1/questions?${question_category ? \"category=\" + question_category : \"\"}${question_difficulty ? \"&difficulty=\" + question_difficulty : \"\"}${question_limit ? \"&limit=\" + question_limit : \"\"}`;\n    console.log(\"event : \", url);\n    const result = await getQuestions(url);\n\n    if (errObject[result]) {\n      dispatch(questionAnswers(result));\n      history.push(\"/question\");\n    }\n\n    console.log(\"result\", result); // history.push(\"/question\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextFieldCom, {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: categoryOptions,\n      label: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: difficultyOption,\n      label: \"Difficulty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      options: typeOptions,\n      label: \"Limit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Setting, \"QcCAyGNSR0jakc6kPsai60yxAmU=\", false, function () {\n  return [useFetchData, useHistory, useSelector, useDispatch];\n});\n\n_c = Setting;\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/home/deepak/Videos/quiz-app/src/Pages/Setting.jsx"],"names":["React","useEffect","useState","useHistory","Button","CircularProgress","TextField","Typography","Box","Formik","SelectField","TextFieldCom","useDispatch","useSelector","useFetchData","getQuestions","handleCategoryChange","handleDifficultyChange","handleLimitChange","handleNameChange","handleScoreChnage","questionAnswers","categoryOptions","id","name","difficultyOption","typeOptions","errObject","Setting","response","loading","error","url","history","question_category","question_difficulty","question_limit","state","clearState","dispatch","handleSubmit","event","preventDefault","console","log","result","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik } from \"formik\";\nimport SelectField from \"../Components/SelectField\";\nimport TextFieldCom from \"../Components/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useFetchData, { getQuestions } from \"../hooks/Axios\";\nimport { handleCategoryChange, handleDifficultyChange, handleLimitChange, handleNameChange, handleScoreChnage, questionAnswers } from \"../Redux/action\";\n\nconst categoryOptions = [\n  { id: \"Random\", name: \"Random\" },\n  { id: \"Linux\", name: \"Linux\" },\n  { id: \"DevOps\", name: \"DevOps\" },\n  { id: \"Networking\", name: \"Networking\" },\n  { id: \"Cloud\", name: \"Cloud\" },\n  { id: \"Docker\", name: \"Docker\" },\n]\n\nconst difficultyOption = [\n  { id: \"easy\", name: \"Easy\" },\n  { id: \"medium\", name: \"Medium\" },\n  { id: \"hard\", name: \"Hard\" },\n];\n\nconst typeOptions = [\n  { id: \"5\", name: \"5\" },\n  { id: \"10\", name: \"10\" },\n  { id: \"15\", name: \"15\" },\n  { id: \"20\", name: \"20\" },\n];\n\nconst errObject = {\n  401: \"Unauthenticated\",\n  404: \"No questions found\",\n  429: \"Too Many Requests\"\n}\n\nconst Setting = () => {\n  const { response, loading, error } = useFetchData({ url: \"/api_category.php\" });\n  const history = useHistory();\n  const { question_category, question_difficulty, question_limit, name } = useSelector((state) => state);\n\n  useEffect(() => {\n    clearState()\n  }, [])\n\n  const dispatch = useDispatch()\n  if (loading) {\n    return (\n      <Box mt={20}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  function clearState() {\n    dispatch(handleScoreChnage(0));\n    dispatch(handleCategoryChange(\"\"));\n    dispatch(handleDifficultyChange(\"\"))\n    dispatch(handleLimitChange(\"\"))\n    dispatch(handleNameChange(\"\"))\n  }\n\n\n\n  if (error) {\n    return (\n      <Typography variant=\"h6\" mt={20} color=\"red\">\n        Something went wrong!!\n      </Typography>\n    );\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"name : \", name);\n    const url = `https://quizapi.io/api/v1/questions?${question_category ? \"category=\" + question_category : \"\"}${question_difficulty ? \"&difficulty=\" + question_difficulty : \"\"}${question_limit ? \"&limit=\" + question_limit : \"\"}`\n    console.log(\"event : \", url);\n\n    const result = await getQuestions(url)\n    if (errObject[result]) {\n      dispatch(questionAnswers(result))\n      history.push(\"/question\");\n    }\n    console.log(\"result\", result)\n    // history.push(\"/question\");\n  };\n\n\n  return (\n\n    <form onSubmit={handleSubmit}>\n      <TextFieldCom >Name</TextFieldCom>\n      <SelectField options={categoryOptions} label=\"Category\" />\n      <SelectField options={difficultyOption} label=\"Difficulty\" />\n      <SelectField options={typeOptions} label=\"Limit\" />\n\n      <Box mt={3} width=\"100%\">\n        <Button fullWidth variant=\"contained\" type=\"submit\">\n          Get Started\n        </Button>\n      </Box>\n    </form>\n\n  );\n};\n\nexport default Setting;\n"]},"metadata":{},"sourceType":"module"}